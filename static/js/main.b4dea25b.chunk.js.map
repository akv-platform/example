{"version":3,"sources":["models/App/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","models/Device/index.tsx","utils/Store/index.tsx","components/Text/index.tsx","components/Link/index.web.tsx","utils/Mock/index.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","screens/Debug/screens/Checklist/data.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/index.tsx","screens/App/index.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklist/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["AppActionTypes","Config","app","name","os","ios","android","web","root","Theme","padding","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","color","background","text","primary","secondary","success","brand","info","dark","light","warning","danger","colorWithOpacity","opacity","arguments","length","undefined","boundedOpacity","startsWith","substr","substring","concat","DeviceActionTypes","WINDOW","Dimensions","get","selectWidth","state","device","windowDimensions","width","selectHeight","height","FontWeight","middlewares","thunk","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","reducers","combineReducers","action","type","APP_LOAD","Object","objectSpread","payload","APP_UPDATE_STATUS","status","DEVICE_UPDATE_BATTERY","batteryLevel","DEVICE_UPDATE_FINGERPRINT","isPinOrFingerprintSet","DEVICE_UPDATE_NETWORK","networkType","networkEffectiveType","effectiveType","DEVICE_UPDATE_DIMENSION","screenDimensions","screen","DEVICE_LOAD","store","createStore","Provider","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","children","props","react","es","React","styles","link","textDecoration","Link","_this$props","to","title","buttonStyle","textStyle","TouchableOpacity","style","es_Link","Text_Text","button","center","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","BrowserRouter","ItemStatus","StyleSheet","create","bold","fontWeight","Medium","textAlign","h1","fontSize","letterSpacing","Light","h2","h3","Regular","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","Text","_this$props2","toUpperCase","getFont","exports_Text","container","flexDirection","paddingHorizontal","justifyContent","alignItems","borderRadius","borderWidth","borderColor","containedBody","backgroundColor","containedText","outlined","fab","alignSelf","disableBody","disableText","half","nonFlex","neutral","icon","paddingRight","Button","contained","onPress","disable","wrap","iconColor","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","margin","zIndex","elevation","position","shadowColor","shadowOffset","shadowRadius","shadowOpacity","Card","touchOpacity","activeOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","left","onLeftPress","right","onRightPress","leftIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","_this$props$leftIcon","_this$props$rightIcon","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","TextInput","placeholder","onChangeText","exports_TextInput","AppComponent","onNetworkChange","change","onDimensionChange","onAppStateChange","enableListeners","disableListeners","addEventListener","NetInfo","AppState","removeEventListener","index_web_Router","react_router_dom_es","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","App","connect","onAppLoad","onDeviceLoad","onDeviceUpdateBattery","onDeviceUpdateFingerprint","ball","marginLeft","marginTop","ballPosition","Animated","ValueXY","x","y","dx","dy","spring","toValue","start","history","Screen_Screen","goBack","getLayout","Button_Button","animate","Math","random","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","spread","pinch","determineCenter","isPinch","isSpread","spreadCount","pinchCount","gestureHandler","onPanResponderRelease","_this$state","setState","_this$state2","PinchSpread","header","textContainer","textInput","item","borderBottomColor","DATA","id","SearchBar","iconBack","iconSearch","textInputPlaceHolder","input","iconName","animation","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","react_default","a","createElement","Card_Card","PureComponent","Questionnaire","next","choices","selected","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","defineProperty","ref","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","items","Data","trigger","1","2","3","4","Checklist","screens","generateRoutes","match","generateLinks","index_web_Link","generateHome","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","email","password","fakeAuth","Launcher","Store_Provider","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.b4dea25b.chunk.js","sourcesContent":["import { AppStateStatus } from \"react-native\";\nimport { RootState } from \"../../utils\";\n\n// action types\nexport enum AppActionTypes {\n  APP_LOAD = \"APP_LOAD\",\n  APP_UPDATE_STATUS = \"APP_UPDATE_STATUS\"\n}\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status?: AppStateStatus;\n}\ninterface AppLoadAction {\n  type: AppActionTypes.APP_LOAD;\n  payload: AppLoadPayload;\n}\ninterface AppStateChangeAction {\n  type: AppActionTypes.APP_UPDATE_STATUS;\n  payload: AppStateStatus;\n}\ntype AppActions = AppLoadAction | AppStateChangeAction;\ntype AppLoadPayload = AppState;\n\n// actions\nexport const onAppLoad = (payload: AppLoadPayload) => ({\n  type: AppActionTypes.APP_LOAD,\n  payload\n});\nexport const onAppStateChange = (payload: AppStateStatus) => ({\n  type: AppActionTypes.APP_UPDATE_STATUS,\n  payload\n});\n\n// selectors\nexport const selectAppStatus = (state: RootState) => state.app.status;\n\n// reducers\nexport function AppReducer(state: AppState = {}, action: AppActions): AppState {\n  switch (action.type) {\n    case AppActionTypes.APP_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AppActionTypes.APP_UPDATE_STATUS:\n      return {\n        ...state,\n        status: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","export const Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    ios: \"ios\",\n    android: \"android\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  padding: {\n    p0: 0,\n    p1: 4,\n    p2: 8,\n    p3: 12,\n    p4: 16,\n    p5: 20,\n    p6: 24,\n    p7: 28,\n    p8: 32,\n    p9: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  },\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    warning: \"hsl(45, 100%, 51%)\",\n    danger: \"hsl(354, 70%, 54%)\"\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) { return color; }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { RootState } from \"../../utils\";\n\nconst WINDOW = Dimensions.get(\"window\");\n\n// action types\nexport enum DeviceActionTypes {\n  DEVICE_UPDATE_BATTERY = \"DEVICE_UPDATE_BATTERY\",\n  DEVICE_UPDATE_FINGERPRINT = \"DEVICE_UPDATE_FINGERPRINT\",\n  DEVICE_LOAD = \"DEVICE_LOAD\",\n  DEVICE_UPDATE_NETWORK = \"DEVICE_UPDATE_NETWORK\",\n  DEVICE_UPDATE_DIMENSION = \"DEVICE_UPDATE_DIMENSION\"\n}\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\ninterface DeviceUpdateBatteryAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY;\n  payload: number;\n}\ninterface DeviceUpdateFingerprintAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT;\n  payload: boolean;\n}\ninterface DeviceLoadAction {\n  type: DeviceActionTypes.DEVICE_LOAD;\n  payload: DeviceState;\n}\ninterface DeviceNetworkChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK;\n  payload: ConnectionInfo;\n}\ninterface DeviceDimensionChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION;\n  payload: DimensionsProps;\n}\ntype DeviceActions =\n  | DeviceUpdateBatteryAction\n  | DeviceUpdateFingerprintAction\n  | DeviceLoadAction\n  | DeviceNetworkChangeAction\n  | DeviceDimensionChangeAction;\n\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions?: ScaledSize;\n  screenDimensions?: ScaledSize;\n}\n\n// actions\nexport const onDeviceUpdateFingerprint = (payload: boolean) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT,\n  payload\n});\nexport const onDeviceUpdateBattery = (payload: number) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY,\n  payload\n});\nexport const onDeviceLoad = (payload: DeviceState) => ({\n  type: DeviceActionTypes.DEVICE_LOAD,\n  payload\n});\nexport const onNetworkChange = (payload: ConnectionType | ConnectionInfo) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK,\n  payload\n});\nexport const onDimensionChange = (payload: DimensionsProps) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION,\n  payload\n});\n\n// selectors\nexport const selectLandscapeOrientation = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height < WINDOW.width\n    : state.device.windowDimensions.height <\n      state.device.windowDimensions.width;\n\nexport const selectSmallestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.width\n      : WINDOW.height\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\n\nexport const selectLargestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.height\n      : WINDOW.width\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\n\nexport const selectWidth = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.width\n    : state.device.windowDimensions.width;\n\nexport const selectHeight = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height\n    : state.device.windowDimensions.height;\n\n// reducers\nexport function DeviceReducer(state: DeviceState = {}, action: DeviceActions) {\n  switch (action.type) {\n    case DeviceActionTypes.DEVICE_UPDATE_BATTERY:\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT:\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_NETWORK:\n      return {\n        ...state,\n        networkType: action.payload.type,\n        networkEffectiveType: action.payload.effectiveType\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_DIMENSION:\n      return {\n        ...state,\n        windowDimensions: action.payload.window,\n        screenDimensions: action.payload.screen\n      };\n    case DeviceActionTypes.DEVICE_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\nimport { Provider as Original } from \"react-redux\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { AppReducer, AppState, DeviceReducer, DeviceState } from \"../../models\";\n\n// debug\ninterface DebugWindow extends Window {\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__<F extends any>(f: F): F;\n}\ndeclare var window: DebugWindow;\n\n// interfaces\nexport interface RootState {\n  app: AppState;\n  device: DeviceState;\n}\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(applyMiddleware(...middlewares));\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: AppReducer,\n  device: DeviceReducer\n});\n\n// store\nconst store = createStore(reducers, enhancers);\n\n// provider\nexport class Provider extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <Original store={store}>{children}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\n\nexport enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: FontWeight.Medium\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  h1: {\n    fontSize: 96,\n    letterSpacing: -1.5,\n    fontWeight: FontWeight.Light\n  },\n  h2: {\n    fontSize: 60,\n    letterSpacing: -0.5,\n    fontWeight: FontWeight.Light\n  },\n  h3: {\n    fontSize: 48,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h4: {\n    fontSize: 34,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  h5: {\n    fontSize: 24,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h6: {\n    fontSize: 20,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Medium\n  },\n  subtitle1: {\n    fontSize: 16,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Regular\n  },\n  subtitle2: {\n    fontSize: 14,\n    letterSpacing: 0.1,\n    fontWeight: FontWeight.Medium\n  },\n  body1: {\n    fontSize: 16,\n    letterSpacing: 0.5,\n    fontWeight: FontWeight.Regular\n  },\n  body2: {\n    fontSize: 14,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  button: {\n    fontSize: 14,\n    letterSpacing: 0.75,\n    fontWeight: FontWeight.Medium\n  },\n  caption: {\n    fontSize: 12,\n    letterSpacing: 0.4,\n    fontWeight: FontWeight.Regular\n  },\n  overline: {\n    fontSize: 10,\n    letterSpacing: 1.5,\n    fontWeight: FontWeight.Regular\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return styles.h1;\n    }\n    if (h2) {\n      return styles.h2;\n    }\n    if (h3) {\n      return styles.h3;\n    }\n    if (h4) {\n      return styles.h4;\n    }\n    if (h5) {\n      return styles.h5;\n    }\n    if (h6) {\n      return styles.h6;\n    }\n    if (subtitle1) {\n      return styles.subtitle1;\n    }\n    if (subtitle2) {\n      return styles.subtitle2;\n    }\n    if (body1) {\n      return styles.body1;\n    }\n    if (body2) {\n      return styles.body2;\n    }\n    if (button) {\n      return styles.button;\n    }\n    if (caption) {\n      return styles.caption;\n    }\n    if (overline) {\n      return styles.overline;\n    }\n    return styles.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Provider } from \"..\";\nimport { Router } from \"../../components\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  public mock = jest.fn();\n  public history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  public fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","interface Source {\n  id: string;\n  title: string;\n  url: string;\n}\n\ninterface Reminder {\n  id: string;\n  day: string; // ?\n  time: string; // ?\n}\n\ninterface Item {\n  id: string;\n  active: boolean;\n  title: string;\n  status: ItemStatus;\n  history?: ItemHistories;\n  reminder?: Reminders;\n  source: Sources;\n}\n\nenum ItemStatus {\n  Todo = \"Todo\",\n  InProgress = \"InProgress\",\n  Reminded = \"Reminded\",\n  Done = \"Done\"\n}\n\ninterface ItemHistory {\n  id: string;\n  createdAt: number;\n  updatedAt: number;\n  itemId: number;\n  status: ItemStatus;\n}\n\ninterface Checklist {\n  id: string;\n  item: Items;\n  itemOrder: string[];\n}\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  checklistOrder: string[];\n  checklist: Checklists;\n}\n\ninterface Reminders {\n  [id: string]: Reminder;\n}\n\ninterface Sources {\n  [id: string]: Source;\n}\n\ninterface ItemHistories {\n  [id: string]: ItemHistory;\n}\n\ninterface Items {\n  [id: string]: Item;\n}\n\ninterface Checklists {\n  [id: string]: Checklist;\n}\n\nexport const User: User | any = {};\n\nexport const Data = {\n  \"4\": {\n    trigger: \"backlog\",\n    items: {\n      \"1\": {\n        title: \"find car outlet\"\n      },\n      \"2\": {\n        title: \"find and charge battery pack\"\n      }\n    }\n  },\n  \"3\": {\n    trigger: \"enter train\",\n    reminders: {},\n    items: {\n      \"1\": {\n        title: \"read\",\n        sources: {}\n      },\n      \"2\": {\n        title: \"remove teeth\"\n      }\n    }\n  },\n  \"5\": {\n    trigger: \"arrive at work\",\n    items: {\n      \"1\": {\n        id: \"1\",\n        title: \"clean emails\"\n      },\n      \"2\": {\n        id: \"2\",\n        title: \"clean slack\"\n      },\n      \"3\": {\n        id: \"3\",\n        title: \"look at sentry\"\n      },\n      \"4\": {\n        id: \"4\",\n        title: \"respond to pull requests\"\n      }\n    }\n  }\n};\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    paddingHorizontal: Theme.padding.p4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: Theme.padding.p1,\n    borderWidth: 1,\n    borderColor: \"transparent\"\n  },\n  height: {\n    height: Theme.padding.p9\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  fab: {\n    padding: Theme.padding.p4,\n    borderRadius: Theme.padding.p8,\n    alignSelf: \"flex-start\"\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  half: {\n    width: \"50%\"\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  center: {\n    alignSelf: \"center\"\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  icon: {\n    paddingRight: Theme.padding.p1\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  disable?: boolean;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  // color\n  neutral?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      neutral,\n      half,\n      center,\n      icon,\n      iconColor\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    return (\n      <TouchableOpacity\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p4}\n          style={iconStyleGroup}\n        />\n        <Text center button title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    padding: Theme.padding.p4,\n    margin: Theme.padding.p2,\n    backgroundColor: Theme.color.background,\n    zIndex: 1,\n    elevation: 1,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.6\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  public touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    borderBottomWidth: 0.5,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    borderColor: Theme.color.dark\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  public boldSyntax = \"*\";\n  public withoutSyntaxIndex = 2;\n\n  public isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  public formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p3\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: Theme.color.background,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p5,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon: string;\n  rightIcon: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onLeftPress: left,\n      onRightPress: right,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    const isEnabled = !!title || !!left || !!right;\n    return (\n      isEnabled && (\n        <View style={styles.container}>\n          {left && <NavButton icon={leftIcon} onPress={left} />}\n          {title && <Text style={styles.title} title={title} />}\n          {right && <NavButton icon={rightIcon} isRight onPress={right} />}\n        </View>\n      )\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Theme.color.background\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress && onLeftPress}\n          onRightPress={onRightPress && onRightPress}\n        />\n        <KeyboardAvoid scrollEnabled={!disableScroll} style={styles.container}>\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    height: 20,\n    width: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20\n  },\n  badgeText: {\n    fontSize: Theme.padding.p2,\n    color: Theme.color.background\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  public badgeLimit = \"!\";\n  public maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) { return null; }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p6,\n      color = Theme.color.dark\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { TextInput as Original, TextStyle } from \"react-native\";\n\ninterface Props {\n  style?: TextStyle | {};\n  placeholder?: string;\n  value?: string;\n  onChangeText?(text: string): void;\n}\n\nexport class TextInput extends React.PureComponent<Props> {\n  public render() {\n    const { placeholder, onChangeText, value, style } = this.props;\n    return (\n      <Original\n        style={style}\n        placeholder={placeholder}\n        onChangeText={onChangeText}\n        value={value}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport { onAppLoad, onAppStateChange } from \"../../models/App\";\nimport {\n  DimensionsProps,\n  onDeviceLoad,\n  onDeviceUpdateBattery,\n  onDeviceUpdateFingerprint,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models/Device\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppLoad: typeof onAppLoad;\n  onAppStateChange: typeof onAppStateChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n  onDeviceUpdateFingerprint: typeof onDeviceUpdateFingerprint;\n  onDeviceUpdateBattery: typeof onDeviceUpdateBattery;\n  onDeviceLoad: typeof onDeviceLoad;\n}\n\ntype Props = DispatchProps;\n\nclass AppComponent extends React.Component<Props> {\n  public componentDidMount() {\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public enableListeners() {\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  public disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n  }\n\n  public onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    this.props.onNetworkChange(change);\n  };\n\n  public onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  public onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStateChange(change);\n  };\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppLoad,\n    onAppStateChange,\n    onDimensionChange,\n    onNetworkChange,\n    onDeviceLoad,\n    onDeviceUpdateBattery,\n    onDeviceUpdateFingerprint\n  }\n)(AppComponent);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    borderWidth: 30,\n    marginLeft: -30,\n    marginTop: -30,\n    borderColor: \"black\"\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    name: \"Shot\",\n    color: \"#a9d0b6\",\n    price: \"30 CHF\"\n  },\n  {\n    name: \"Juice\",\n    color: \"#e9bbd1\",\n    price: \"64 CHF\"\n  },\n  {\n    name: \"Mighty Juice\",\n    color: \"#eba65c\",\n    price: \"80 CHF\"\n  },\n  {\n    name: \"Sandwich\",\n    color: \"#95c3e4\",\n    price: \"85 CHF\"\n  },\n  {\n    name: \"Combi\",\n    color: \"#1c1c1c\",\n    price: \"145 CHF\"\n  },\n  {\n    name: \"Signature\",\n    color: \"#a390bc\",\n    price: \"92 CHF\"\n  },\n  {\n    name: \"Coffee\",\n    color: \"#fef2a0\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                inputRange,\n                outputRange,\n                extrapolateRight: \"clamp\"\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    margin: 16\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  card: {\n    height: cardHeight,\n    borderRadius: 10\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    borderWidth: 30,\n    marginLeft: -30,\n    marginTop: -30,\n    borderColor: \"black\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public ballPosition: Animated.ValueXY;\n  public panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      spread: false,\n      pinch: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../utils\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    spreadCount: 0,\n    pinchCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    height: Theme.padding.p20,\n    backgroundColor: Theme.color.light,\n    padding: Theme.padding.p2,\n    justifyContent: \"center\"\n  },\n  textContainer: {\n    height: \"100%\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: Theme.padding.p2\n  },\n  text: {\n    fontSize: Theme.padding.p6\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p2\n  },\n  item: {\n    padding: Theme.padding.p6,\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconBack = \"arrow-left\";\n  public iconSearch = \"magnify\";\n  public textInputPlaceHolder = \"Search\";\n  public state: State = {\n    input: \"\",\n    iconName: this.iconSearch,\n    animation: new Animated.Value(0)\n  };\n  public animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      toValue: value,\n      duration: this.animationDuration\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p5 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      key: \"1\",\n      title: \"What type of counseling are you looking for\",\n      next: \"2\",\n      type: \"radio\",\n      choices: [\n        {\n          key: \"1\",\n          title: \"individual\",\n          selected: false\n        },\n        {\n          key: \"2\",\n          title: \"couple\",\n          selected: false\n        },\n        {\n          key: \"3\",\n          title: \"teen\",\n          selected: false\n        }\n      ]\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\nimport { Data } from \"./data\";\n\ntype Props = RouteComponentProps;\n\nexport class Checklist extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    const items: any = Data[5].items;\n    const data = Object.keys(items).map(key => items[key]);\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text title={Data[5].trigger} />\n        <FlatList\n          keyExtractor={item => item.id}\n          data={data}\n          renderItem={({ item }) => {\n            return (\n              <View style={{ flexDirection: \"row\" }}>\n                <Button\n                  icon=\"checkbox-marked-circle\"\n                  iconColor={Theme.color.success}\n                  onPress={() => undefined}\n                />\n                <Button\n                  icon=\"close-circle\"\n                  iconColor={Theme.color.danger}\n                  onPress={() => undefined}\n                />\n                <Button\n                  iconColor={Theme.color.warning}\n                  icon=\"clock\"\n                  onPress={() => undefined}\n                />\n                <Button neutral title={item.title} onPress={() => undefined} />\n              </View>\n            );\n          }}\n        />\n        <Button title=\"done\" onPress={() => undefined} />\n      </Screen>\n    );\n  }\n}\n","// import * as React from \"react\";\n\n// import {\n//   StyleSheet,\n//   View,\n//   Image,\n//   PanResponder,\n//   Animated,\n//   PanResponderInstance,\n//   Value,\n//   ValueXY\n// } from \"react-native\";\n\n// import { Screen } from \"../../components\";\n\n// interface Props {\n//   title: string;\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#F5FCFF\"\n//   },\n//   welcome: {\n//     fontSize: 20,\n//     textAlign: \"center\",\n//     margin: 10\n//   },\n//   instructions: {\n//     textAlign: \"center\",\n//     color: \"#333333\",\n//     marginBottom: 5\n//   }\n// });\n\n// interface State {\n//   pan: ValueXY;\n//   scale: Value;\n// }\n\n// export class Debug extends React.PureComponent<Props, State> {\n//   panResponder: PanResponderInstance;\n\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       pan: new Animated.ValueXY(),\n//       scale: new Animated.Value(1)\n//     };\n//     this.panResponder = PanResponder.create({\n//       onMoveShouldSetPanResponderCapture: () => true,\n//       onPanResponderGrant: () => {\n//         const { pan, scale } = this.state;\n//         // Set the initial value to the current state\n//         pan.setOffset({\n//           x: pan.x._value,\n//           y: pan.y._value\n//         });\n//         pan.setValue({ x: 0, y: 0 });\n//         Animated.spring(scale, {\n//           toValue: 2\n//         }).start();\n//       },\n//       onPanResponderMove: Animated.event([\n//         null,\n//         { dx: this.state.pan.x, dy: this.state.pan.y }\n//       ]),\n\n//       onPanResponderRelease: () => {\n//         // Flatten the offset to avoid erratic behavior\n//         const { pan, scale } = this.state;\n//         pan.flattenOffset();\n//         Animated.spring(scale, { toValue: 1 }).start();\n//       }\n//     });\n//   }\n\n//   componentDidMount() {}\n\n//   render() {\n//     // Destructure the value of pan from the state\n//     let { pan, scale } = this.state;\n\n//     // Calculate the x and y transform from the pan value\n//     let [translateX, translateY] = [pan.x, pan.y];\n\n//     let rotate = \"0deg\";\n\n//     // Calculate the transform property and set it as a value for our style which we add below to the Animated.View component\n//     let imageStyle = {\n//       transform: [{ translateX }, { translateY }, { rotate }, { scale }]\n//     };\n\n//     return (\n//       <View>\n//         <Animated.View style={[imageStyle]} {...this.panResponder.panHandlers}>\n//           <Image\n//             style={{ width: 50, height: 50 }}\n//             source={require(\"./placeholder.png\")}\n//             resizeMode=\"contain\"\n//           />\n//         </Animated.View>\n//       </View>\n//     );\n//   }\n// }\n\n// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// export class Debug extends React.PureComponent {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {}\n//   };\n\n//   constructor(props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (event, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (event, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     return this.props.data\n//       .map((item, i) => {\n//         if (i < this.state.index) {\n//           return null;\n//         }\n\n//         if (i === this.state.index) {\n//           return (\n//             <Animated.View\n//               key={item.id}\n//               style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//               {...this.state.panResponder.panHandlers}\n//             >\n//               {this.props.renderCard(item)}\n//             </Animated.View>\n//           );\n//         }\n\n//         return (\n//           <Animated.View\n//             key={item.id}\n//             style={[\n//               styles.cardStyle,\n//               { top: 10 * (i - this.state.index), zIndex: 5 }\n//             ]}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       })\n//       .reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\nimport * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Checklist,\n  Drag,\n  Fonts,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  public screens: any = {\n    Ball,\n    Drag,\n    Cards,\n    Fonts,\n    Buttons,\n    PinchSpread,\n    SearchBar,\n    OKRs,\n    Questionnaire,\n    Checklist\n  };\n\n  public generateRoutes = () => {\n    const { match } = this.props;\n    return Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${match.path}/${screen}`}\n        component={this.screens[screen]}\n      />\n    ));\n  };\n\n  public generateLinks = () => {\n    const { match } = this.props;\n    return Object.keys(this.screens).map((screen: string) => (\n      <Link key={screen} to={`${match.path}/${screen}`} title={screen} />\n    ));\n  };\n\n  public generateHome = () => {\n    const { history } = this.props;\n    return () => (\n      <Screen onLeftPress={() => history.goBack()}>\n        {this.generateLinks()}\n      </Screen>\n    );\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.generateHome()} />\n      </Switch>\n    );\n  }\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button, Screen } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Theme } from \"../../utils\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  }\n});\n\ninterface FooterProps {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<FooterProps> {\n  render() {\n    const { history } = this.props;\n    return (\n      <Screen\n        style={{ backgroundColor: Theme.color.primary, flexDirection: \"row\" }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n          <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n          <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title=\"To get started, edit ./src/containers/App/index.tsx\" />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          placeholder=\"email\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          placeholder=\"password\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => \"\"} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform } from \"react-native\";\nimport { App } from \"./screens\";\nimport { Config, Provider } from \"./utils\";\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}