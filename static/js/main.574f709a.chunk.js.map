{"version":3,"sources":["models/App/index.tsx","screens/Debug/screens/Checklist/Item.tsx","models/Device/index.tsx","utils/Font/index.tsx","models/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","utils/Mock/index.tsx","components/TextInput/index.tsx","components/Link/index.web.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","components/Text/index.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/Clear.tsx","components/TextInput/Error.tsx","components/TextInput/Title.tsx","screens/App/index.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Input/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklist/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["AppActionTypes","createItem","createStandardAction","updateItem","removeItem","DeviceActionTypes","WINDOW","Dimensions","get","FontWeight","selectWidth","state","device","windowDimensions","width","selectHeight","height","reducers","combineReducers","app","arguments","length","undefined","action","type","APP_LOAD","Object","objectSpread","payload","APP_UPDATE_STATUS","status","DEVICE_UPDATE_BATTERY","batteryLevel","DEVICE_UPDATE_FINGERPRINT","isPinOrFingerprintSet","DEVICE_UPDATE_NETWORK","networkType","networkEffectiveType","effectiveType","DEVICE_UPDATE_DIMENSION","window","screenDimensions","screen","DEVICE_LOAD","items","getType","id","uuidv4","defineProperty","active","updatedAt","Date","now","createdAt","Error","middlewares","thunk","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","Provider","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","children","props","react","es","React","Config","name","os","ios","android","web","root","Theme","padding","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","color","background","text","primary","secondary","success","brand","info","dark","light","warning","danger","colorWithOpacity","opacity","boundedOpacity","startsWith","substr","substring","concat","KeyboardType","ReturnKeyType","FontSize","h1","fontSize","letterSpacing","fontWeight","Light","h2","h3","Regular","h4","h5","h6","Medium","subtitle1","subtitle2","body1","body2","button","caption","overline","styles","link","textDecoration","Link","_this$props","to","title","buttonStyle","textStyle","TouchableOpacity","style","es_Link","Text_Text","center","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","BrowserRouter","StyleSheet","create","bold","textAlign","Text","_this$props2","hidden","toUpperCase","getFont","exports_Text","container","flexDirection","paddingHorizontal","justifyContent","alignItems","borderRadius","borderWidth","borderColor","label","margin","containedBody","backgroundColor","containedText","outlined","fab","alignSelf","disableBody","disableText","half","nonFlex","neutral","icon","paddingRight","Button","contained","onPress","disable","wrap","iconColor","lowercase","activeOpacity","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","zIndex","elevation","position","shadowColor","shadowOffset","shadowRadius","shadowOpacity","Card","touchOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","left","onLeftPress","right","onRightPress","leftIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","_this$props$leftIcon","_this$props$rightIcon","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","Clear","Button_Button","error","message","textTransform","optional","Title","optionalText","stylesOptional","row","textInput","marginTop","borderFocus","borderError","TextInput","focus","updateFocus","setState","focusOnInput","textClear","onChangeText","_this$props$editable","editable","autoCorrect","secureTextEntry","keyboardType","returnKeyType","_this$props$blurOnSub","blurOnSubmit","placeholder","_this$props$disableFu","disableFullscreenUI","textInputStyle","noValue","Title_Title","exports_TextInput","ref","input","selectionColor","onFocus","onBlur","placeholderTextColor","underlineColorAndroid","Clear_Clear","Error_Error","AppComponent","onNetworkChange","change","onDimensionChange","onAppStateChange","enableListeners","disableListeners","addEventListener","NetInfo","AppState","removeEventListener","index_web_Router","react_router_dom_es","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","App","connect","onAppLoad","onDeviceLoad","onDeviceUpdateBattery","onDeviceUpdateFingerprint","ball","marginLeft","ballPosition","Animated","ValueXY","x","y","dx","dy","spring","toValue","start","history","Screen_Screen","goBack","getLayout","animate","Math","random","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","spread","pinch","determineCenter","isPinch","isSpread","spreadCount","pinchCount","gestureHandler","onPanResponderRelease","_this$state","_this$state2","PinchSpread","header","textContainer","item","borderBottomColor","DATA","SearchBar","iconBack","iconSearch","textInputPlaceHolder","iconName","animation","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","Card_Card","Input","email","password","val","Email","Questionnaire","next","choices","selected","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","description","createItem2","update","values","Checklist","screens","generateRoutes","match","generateLinks","index_web_Link","generateHome","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","fakeAuth","Launcher","models_Provider","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.574f709a.chunk.js","sourcesContent":["import { AppStateStatus } from \"react-native\";\nimport { RootState } from \"../../models\";\n\n// action types\nexport enum AppActionTypes {\n  APP_LOAD = \"APP_LOAD\",\n  APP_UPDATE_STATUS = \"APP_UPDATE_STATUS\"\n}\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status?: AppStateStatus;\n}\ninterface AppLoadAction {\n  type: AppActionTypes.APP_LOAD;\n  payload: AppLoadPayload;\n}\ninterface AppStateChangeAction {\n  type: AppActionTypes.APP_UPDATE_STATUS;\n  payload: AppStateStatus;\n}\ntype AppActions = AppLoadAction | AppStateChangeAction;\ntype AppLoadPayload = AppState;\n\n// actions\nexport const onAppLoad = (payload: AppLoadPayload) => ({\n  type: AppActionTypes.APP_LOAD,\n  payload\n});\nexport const onAppStateChange = (payload: AppStateStatus) => ({\n  type: AppActionTypes.APP_UPDATE_STATUS,\n  payload\n});\n\n// selectors\nexport const selectAppStatus = (state: RootState) => state.app.status;\n\n// reducers\nexport function AppReducer(state: AppState = {}, action: AppActions): AppState {\n  switch (action.type) {\n    case AppActionTypes.APP_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AppActionTypes.APP_UPDATE_STATUS:\n      return {\n        ...state,\n        status: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport uuidv4 from \"uuid/v4\";\nimport { RootState } from \"../../../../models\";\n\n// Interfaces\ntype Item = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  sources?: string[];\n  createdAt: number;\n  updatedAt: number;\n}>;\nexport type Items = DeepReadonly<{ [key: string]: Item }>;\ntype ItemAction = ActionType<\n  typeof createItem | typeof removeItem | typeof updateItem\n>;\ninterface CreateItem {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateItem = CreateItem & { id: string };\n\n// Actions\nexport const createItem = createStandardAction(\"ITEM/CREATE\")<CreateItem>();\nexport const updateItem = createStandardAction(\"ITEM/UPDATE\")<UpdateItem>();\nexport const removeItem = createStandardAction(\"ITEM/REMOVE\")<string>();\n\n// Selectors\nexport const selectItem = (state: RootState, id: string) => state.items[id];\n\n// Reducer\nexport const ItemReducer = (state: Items = {}, action: ItemAction): Items => {\n  switch (action.type) {\n    case getType(createItem):\n      const id = uuidv4();\n      return {\n        ...state,\n        [id]: {\n          ...action.payload,\n          id,\n          active: true,\n          updatedAt: Date.now(),\n          createdAt: Date.now()\n        }\n      };\n    case getType(updateItem):\n      if (!state[action.payload.id]) {\n        throw new Error(\"no item to update\");\n      }\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(removeItem):\n      if (!state[action.payload]) {\n        throw new Error(\"no item to remove\");\n      }\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: false,\n          updatedAt: Date.now()\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { RootState } from \"../../models\";\n\nconst WINDOW = Dimensions.get(\"window\");\n\n// action types\nexport enum DeviceActionTypes {\n  DEVICE_UPDATE_BATTERY = \"DEVICE_UPDATE_BATTERY\",\n  DEVICE_UPDATE_FINGERPRINT = \"DEVICE_UPDATE_FINGERPRINT\",\n  DEVICE_LOAD = \"DEVICE_LOAD\",\n  DEVICE_UPDATE_NETWORK = \"DEVICE_UPDATE_NETWORK\",\n  DEVICE_UPDATE_DIMENSION = \"DEVICE_UPDATE_DIMENSION\"\n}\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\ninterface DeviceUpdateBatteryAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY;\n  payload: number;\n}\ninterface DeviceUpdateFingerprintAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT;\n  payload: boolean;\n}\ninterface DeviceLoadAction {\n  type: DeviceActionTypes.DEVICE_LOAD;\n  payload: DeviceState;\n}\ninterface DeviceNetworkChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK;\n  payload: ConnectionInfo;\n}\ninterface DeviceDimensionChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION;\n  payload: DimensionsProps;\n}\ntype DeviceActions =\n  | DeviceUpdateBatteryAction\n  | DeviceUpdateFingerprintAction\n  | DeviceLoadAction\n  | DeviceNetworkChangeAction\n  | DeviceDimensionChangeAction;\n\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions?: ScaledSize;\n  screenDimensions?: ScaledSize;\n}\n\n// actions\nexport const onDeviceUpdateFingerprint = (payload: boolean) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT,\n  payload\n});\nexport const onDeviceUpdateBattery = (payload: number) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY,\n  payload\n});\nexport const onDeviceLoad = (payload: DeviceState) => ({\n  type: DeviceActionTypes.DEVICE_LOAD,\n  payload\n});\nexport const onNetworkChange = (payload: ConnectionType | ConnectionInfo) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK,\n  payload\n});\nexport const onDimensionChange = (payload: DimensionsProps) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION,\n  payload\n});\n\n// selectors\nexport const selectLandscapeOrientation = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height < WINDOW.width\n    : state.device.windowDimensions.height <\n      state.device.windowDimensions.width;\n\nexport const selectSmallestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.width\n      : WINDOW.height\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\n\nexport const selectLargestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.height\n      : WINDOW.width\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\n\nexport const selectWidth = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.width\n    : state.device.windowDimensions.width;\n\nexport const selectHeight = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height\n    : state.device.windowDimensions.height;\n\n// reducers\nexport const DeviceReducer = (\n  state: DeviceState = {},\n  action: DeviceActions\n) => {\n  switch (action.type) {\n    case DeviceActionTypes.DEVICE_UPDATE_BATTERY:\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT:\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_NETWORK:\n      return {\n        ...state,\n        networkType: action.payload.type,\n        networkEffectiveType: action.payload.effectiveType\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_DIMENSION:\n      return {\n        ...state,\n        windowDimensions: action.payload.window,\n        screenDimensions: action.payload.screen\n      };\n    case DeviceActionTypes.DEVICE_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","export enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nexport const FontSize = {\n  h1: {\n    fontSize: 96,\n    letterSpacing: -1.5,\n    fontWeight: FontWeight.Light\n  },\n  h2: {\n    fontSize: 60,\n    letterSpacing: -0.5,\n    fontWeight: FontWeight.Light\n  },\n  h3: {\n    fontSize: 48,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h4: {\n    fontSize: 34,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  h5: {\n    fontSize: 24,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h6: {\n    fontSize: 20,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Medium\n  },\n  subtitle1: {\n    fontSize: 16,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Regular\n  },\n  subtitle2: {\n    fontSize: 14,\n    letterSpacing: 0.1,\n    fontWeight: FontWeight.Medium\n  },\n  body1: {\n    fontSize: 16,\n    letterSpacing: 0.5,\n    fontWeight: FontWeight.Regular\n  },\n  body2: {\n    fontSize: 14,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  button: {\n    fontSize: 14,\n    letterSpacing: 0.75,\n    fontWeight: FontWeight.Medium\n  },\n  caption: {\n    fontSize: 12,\n    letterSpacing: 0.4,\n    fontWeight: FontWeight.Regular\n  },\n  overline: {\n    fontSize: 10,\n    letterSpacing: 1.5,\n    fontWeight: FontWeight.Regular\n  }\n};\n","import * as React from \"react\";\nimport { Provider as Original } from \"react-redux\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { AppReducer, AppState, DeviceReducer, DeviceState } from \".\";\nimport { ItemReducer, Items } from \"../screens/Debug/screens/Checklist/Item\";\n\n// models\nexport * from \"./App\";\nexport * from \"./Device\";\n\n// interfaces\nexport interface RootState {\n  app: AppState;\n  device: DeviceState;\n  items: Items;\n}\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: AppReducer,\n  device: DeviceReducer,\n  items: ItemReducer\n});\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(applyMiddleware(...middlewares));\n\n// store\nconst store = createStore(reducers, enhancers);\n\n// provider\nexport class Provider extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <Original store={store}>{children}</Original>;\n  }\n}\n","export const Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    ios: \"ios\",\n    android: \"android\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  padding: {\n    p0: 0,\n    p1: 4,\n    p2: 8,\n    p3: 12,\n    p4: 16,\n    p5: 20,\n    p6: 24,\n    p7: 28,\n    p8: 32,\n    p9: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  },\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    warning: \"hsl(45, 100%, 51%)\",\n    danger: \"hsl(354, 70%, 54%)\"\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) { return color; }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import * as React from \"react\";\nimport { Router } from \"../../components\";\nimport { Provider } from \"../../models\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  public mock = jest.fn();\n  public history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextInput as Original,\n  TextStyle,\n  View\n} from \"react-native\";\nimport { FontSize, Theme } from \"../../utils\";\nimport { Clear } from \"./Clear\";\nimport { Error } from \"./Error\";\nimport { Title } from \"./Title\";\n\n// styling https://uxdesign.cc/design-better-forms-96fadca0f49c\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\"\n  },\n  textInput: {\n    flex: 1,\n    borderColor: Theme.color.secondary,\n    borderWidth: 2,\n    borderRadius: Theme.padding.p1,\n    padding: Theme.padding.p2,\n    paddingRight: Theme.padding.p8,\n    marginTop: Theme.padding.p1,\n    backgroundColor: Theme.color.background\n  },\n  borderFocus: {\n    borderColor: Theme.color.primary\n  },\n  borderError: {\n    borderColor: Theme.color.danger\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  error?: string;\n  style?: TextStyle | {};\n  placeholder?: string;\n  value: string;\n  disableFullscreenUI?: boolean;\n  editable?: boolean;\n  autoCorrect?: boolean;\n  blurOnSubmit?: boolean;\n  secureTextEntry?: boolean;\n  keyboardType?: KeyboardType;\n  returnKeyType?: ReturnKeyType;\n  onChangeText(text: string): void;\n}\n\ninterface State {\n  focus: boolean;\n}\n\nexport enum KeyboardType {\n  Default = \"default\",\n  Number = \"number-pad\",\n  Decimal = \"decimal-pad\",\n  Numeric = \"numeric\",\n  Email = \"email-address\",\n  Phone = \"phone-pad\"\n}\n\nexport enum ReturnKeyType {\n  Done = \"done\",\n  Go = \"go\",\n  Next = \"next\",\n  Search = \"search\",\n  Send = \"send\"\n}\n\nexport class TextInput extends React.PureComponent<Props, State> {\n  public textInput?: Original;\n  public state = {\n    focus: false\n  };\n\n  public updateFocus = (focus: boolean) => {\n    this.setState({ focus });\n  };\n\n  public focusOnInput = () => {\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.focus();\n  };\n\n  public textClear = () => {\n    const { onChangeText } = this.props;\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.clear();\n    onChangeText(\"\");\n  };\n\n  public render() {\n    const {\n      title,\n      optional,\n      error,\n      editable = true,\n      autoCorrect,\n      secureTextEntry,\n      keyboardType,\n      returnKeyType,\n      blurOnSubmit = true,\n      placeholder,\n      onChangeText,\n      value,\n      disableFullscreenUI = true,\n      style\n    } = this.props;\n    const { focus } = this.state;\n    const textInputStyle = [\n      styles.textInput,\n      error && styles.borderError,\n      focus && styles.borderFocus,\n      FontSize.body2,\n      style\n    ];\n    const noValue = value.length === 0;\n    return (\n      <>\n        <Title title={title} optional={optional} onPress={this.focusOnInput} />\n        <View style={styles.row}>\n          <Original\n            ref={input => {\n              if (!input) {\n                return;\n              }\n              this.textInput = input;\n            }}\n            autoCorrect={autoCorrect}\n            selectionColor={Theme.color.primary}\n            disableFullscreenUI={disableFullscreenUI}\n            onFocus={() => this.updateFocus(true)}\n            onBlur={() => this.updateFocus(false)}\n            editable={editable}\n            placeholderTextColor={Theme.color.secondary}\n            blurOnSubmit={blurOnSubmit}\n            secureTextEntry={secureTextEntry}\n            returnKeyType={returnKeyType}\n            keyboardType={keyboardType}\n            underlineColorAndroid=\"transparent\"\n            style={textInputStyle}\n            placeholder={placeholder}\n            onChangeText={onChangeText}\n            value={value}\n          />\n          <Clear hidden={noValue} onPress={this.textClear} />\n        </View>\n        <Error error={error} onPress={this.focusOnInput} />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  public fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\nimport { FontSize } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: \"600\" // TODO: figure out why I cannot import FontWeight.Medium with tests\n  },\n  center: {\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n  hidden?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return FontSize.h1;\n    }\n    if (h2) {\n      return FontSize.h2;\n    }\n    if (h3) {\n      return FontSize.h3;\n    }\n    if (h4) {\n      return FontSize.h4;\n    }\n    if (h5) {\n      return FontSize.h5;\n    }\n    if (h6) {\n      return FontSize.h6;\n    }\n    if (subtitle1) {\n      return FontSize.subtitle1;\n    }\n    if (subtitle2) {\n      return FontSize.subtitle2;\n    }\n    if (body1) {\n      return FontSize.body1;\n    }\n    if (body2) {\n      return FontSize.body2;\n    }\n    if (button) {\n      return FontSize.button;\n    }\n    if (caption) {\n      return FontSize.caption;\n    }\n    if (overline) {\n      return FontSize.overline;\n    }\n    return FontSize.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center, hidden } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0 || hidden) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    paddingHorizontal: Theme.padding.p4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: Theme.padding.p1,\n    borderWidth: 1,\n    borderColor: \"transparent\"\n  },\n  height: {\n    height: Theme.padding.p9\n  },\n  label: {\n    height: Theme.padding.p5,\n    paddingHorizontal: 0,\n    margin: Theme.padding.p1,\n    justifyContent: \"flex-start\"\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  fab: {\n    padding: Theme.padding.p4,\n    borderRadius: Theme.padding.p8,\n    alignSelf: \"flex-start\"\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  half: {\n    width: \"50%\"\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  center: {\n    alignSelf: \"center\"\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  secondary: {\n    color: Theme.color.secondary\n  },\n  danger: {\n    color: Theme.color.danger\n  },\n  icon: {\n    paddingRight: 2\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  hidden?: boolean;\n  disable?: boolean;\n  activeOpacity?: number;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  label?: boolean;\n  // color\n  neutral?: boolean;\n  secondary?: boolean;\n  danger?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  lowercase?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      hidden,\n      neutral,\n      half,\n      center,\n      icon,\n      iconColor,\n      secondary,\n      danger,\n      label,\n      lowercase,\n      activeOpacity\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      label && styles.label,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      secondary && styles.secondary,\n      danger && styles.danger,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    if (hidden) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={activeOpacity}\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p4}\n          style={iconStyleGroup}\n        />\n        <Text center button={!lowercase} title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    padding: Theme.padding.p4,\n    margin: Theme.padding.p2,\n    backgroundColor: Theme.color.background,\n    zIndex: 1,\n    elevation: 1,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.6\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  public touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    borderBottomWidth: 0.5,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    borderColor: Theme.color.dark\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  public boldSyntax = \"*\";\n  public withoutSyntaxIndex = 2;\n\n  public isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  public formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p3\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: Theme.color.background,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p5,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon: string;\n  rightIcon: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onLeftPress: left,\n      onRightPress: right,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    const isEnabled = !!title || !!left || !!right;\n    return (\n      isEnabled && (\n        <View style={styles.container}>\n          {left && <NavButton icon={leftIcon} onPress={left} />}\n          {title && <Text style={styles.title} title={title} />}\n          {right && <NavButton icon={rightIcon} isRight onPress={right} />}\n        </View>\n      )\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Theme.color.background\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress && onLeftPress}\n          onRightPress={onRightPress && onRightPress}\n        />\n        <KeyboardAvoid scrollEnabled={!disableScroll} style={styles.container}>\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    height: 20,\n    width: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20\n  },\n  badgeText: {\n    fontSize: Theme.padding.p2,\n    color: Theme.color.background\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  public badgeLimit = \"!\";\n  public maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) { return null; }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  hidden?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p6,\n      color = Theme.color.dark,\n      hidden\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0 || hidden) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Button } from \"..\";\n\nconst styles = StyleSheet.create({\n  clear: {\n    position: \"absolute\",\n    right: -6,\n    top: 6\n  }\n});\n\ninterface Props {\n  hidden: boolean;\n  onPress(): void;\n}\n\nexport class Clear extends React.PureComponent<Props> {\n  public icon = \"close-circle\";\n  public render() {\n    const { hidden, onPress } = this.props;\n    return (\n      <Button\n        secondary\n        hidden={hidden}\n        icon={this.icon}\n        buttonStyle={styles.clear}\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Button } from \"..\";\n\ninterface Props {\n  error?: string;\n  onPress(): void;\n}\n\nexport class Error extends React.PureComponent<Props> {\n  public icon = \"alert-circle\";\n  public render() {\n    const { error, onPress } = this.props;\n    const icon = error && this.icon;\n    const message = error || \" \";\n    return (\n      <Button\n        label\n        wrap\n        lowercase\n        activeOpacity={1}\n        icon={icon}\n        title={message}\n        danger\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  title: {\n    textTransform: \"capitalize\"\n  },\n  optional: {\n    color: Theme.color.secondary\n  },\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  onPress(): void;\n}\n\nexport class Title extends React.PureComponent<Props> {\n  public optionalText = \" - Optional\";\n  public render() {\n    const { title, optional, onPress } = this.props;\n    const stylesOptional = [styles.title, styles.optional];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return (\n      // TODO: remove touchableopacity and move to button component\n      <TouchableOpacity\n        activeOpacity={1}\n        style={styles.container}\n        onPress={onPress}\n      >\n        <Text title={title} style={styles.title} />\n        <Text\n          hidden={!optional}\n          title={this.optionalText}\n          style={stylesOptional}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport { onAppLoad, onAppStateChange } from \"../../models/App\";\nimport {\n  DimensionsProps,\n  onDeviceLoad,\n  onDeviceUpdateBattery,\n  onDeviceUpdateFingerprint,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models/Device\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppLoad: typeof onAppLoad;\n  onAppStateChange: typeof onAppStateChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n  onDeviceUpdateFingerprint: typeof onDeviceUpdateFingerprint;\n  onDeviceUpdateBattery: typeof onDeviceUpdateBattery;\n  onDeviceLoad: typeof onDeviceLoad;\n}\n\ntype Props = DispatchProps;\n\nclass AppComponent extends React.Component<Props> {\n  public componentDidMount() {\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public enableListeners() {\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  public disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n  }\n\n  public onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    this.props.onNetworkChange(change);\n  };\n\n  public onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  public onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStateChange(change);\n  };\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppLoad,\n    onAppStateChange,\n    onDimensionChange,\n    onNetworkChange,\n    onDeviceLoad,\n    onDeviceUpdateBattery,\n    onDeviceUpdateFingerprint\n  }\n)(AppComponent);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    borderWidth: 30,\n    marginLeft: -30,\n    marginTop: -30,\n    borderColor: \"black\"\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    name: \"Shot\",\n    color: \"#a9d0b6\",\n    price: \"30 CHF\"\n  },\n  {\n    name: \"Juice\",\n    color: \"#e9bbd1\",\n    price: \"64 CHF\"\n  },\n  {\n    name: \"Mighty Juice\",\n    color: \"#eba65c\",\n    price: \"80 CHF\"\n  },\n  {\n    name: \"Sandwich\",\n    color: \"#95c3e4\",\n    price: \"85 CHF\"\n  },\n  {\n    name: \"Combi\",\n    color: \"#1c1c1c\",\n    price: \"145 CHF\"\n  },\n  {\n    name: \"Signature\",\n    color: \"#a390bc\",\n    price: \"92 CHF\"\n  },\n  {\n    name: \"Coffee\",\n    color: \"#fef2a0\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                inputRange,\n                outputRange,\n                extrapolateRight: \"clamp\"\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    margin: 16\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  card: {\n    height: cardHeight,\n    borderRadius: 10\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    borderWidth: 30,\n    marginLeft: -30,\n    marginTop: -30,\n    borderColor: \"black\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public ballPosition: Animated.ValueXY;\n  public panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      spread: false,\n      pinch: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    spreadCount: 0,\n    pinchCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    height: Theme.padding.p20,\n    backgroundColor: Theme.color.light,\n    padding: Theme.padding.p2,\n    justifyContent: \"center\"\n  },\n  textContainer: {\n    height: \"100%\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: Theme.padding.p2\n  },\n  text: {\n    fontSize: Theme.padding.p6\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p2\n  },\n  item: {\n    padding: Theme.padding.p6,\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconBack = \"arrow-left\";\n  public iconSearch = \"magnify\";\n  public textInputPlaceHolder = \"Search\";\n  public state: State = {\n    input: \"\",\n    iconName: this.iconSearch,\n    animation: new Animated.Value(0)\n  };\n  public animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      toValue: value,\n      duration: this.animationDuration\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p5 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Button,\n  KeyboardType,\n  Screen,\n  TextInput\n} from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\nexport class Input extends React.PureComponent<Props> {\n  public state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    error: \"\"\n  };\n  public render() {\n    const { email, password, name, error } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View\n          style={{ flex: 1, backgroundColor: Theme.color.light, padding: 20 }}\n        >\n          <TextInput\n            title=\"Name\"\n            placeholder=\"jane doe\"\n            optional\n            value={name}\n            onChangeText={val => this.setState({ name: val })}\n            error={error}\n          />\n          <TextInput\n            title=\"EMAIL\"\n            value={email}\n            onChangeText={val => this.setState({ email: val })}\n            keyboardType={KeyboardType.Email}\n            placeholder=\"example@gmail.com\"\n            error={error}\n          />\n          <TextInput\n            value={password}\n            onChangeText={val => this.setState({ password: val })}\n            title=\"Password\"\n            placeholder=\"•••••••\"\n            secureTextEntry\n          />\n          <Button\n            contained\n            title=\"complete form\"\n            onPress={() => this.setState({ error: \"Invalid Email\" })}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      key: \"1\",\n      title: \"What type of counseling are you looking for\",\n      next: \"2\",\n      type: \"radio\",\n      choices: [\n        {\n          key: \"1\",\n          title: \"individual\",\n          selected: false\n        },\n        {\n          key: \"2\",\n          title: \"couple\",\n          selected: false\n        },\n        {\n          key: \"3\",\n          title: \"teen\",\n          selected: false\n        }\n      ]\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { RootState } from \"../../../../models\";\nimport { Theme } from \"../../../../utils\";\nimport { createItem, Items, removeItem, updateItem } from \"./Item\";\n\ninterface StateProps {\n  items: Items;\n}\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n  updateItem: typeof updateItem;\n  removeItem: typeof removeItem;\n}\n\ntype Props = RouteComponentProps & StateProps & DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  public createItem = () => {\n    const { createItem: create } = this.props;\n    create({ name: Date.now().toString(), description: \"hello\" });\n  };\n  public createItem2 = () => {\n    const { createItem: create } = this.props;\n    create({ name: Date.now().toString() });\n  };\n  public updateItem = () => {\n    const { updateItem: update } = this.props;\n    update({\n      id: \"123\",\n      name: \"123\"\n    });\n  };\n  public removeItem = (id: string) => {\n    const { removeItem: remove } = this.props;\n    remove(id);\n  };\n\n  public render() {\n    const { history, items } = this.props;\n\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={item => item.id}\n          data={Object.values(items)}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                icon=\"checkbox-marked-circle\"\n                iconColor={Theme.color.success}\n                onPress={() => undefined}\n              />\n              <Button\n                icon=\"close-circle\"\n                iconColor={Theme.color.danger}\n                onPress={() => this.removeItem(item.id)}\n              />\n              <Button\n                iconColor={Theme.color.warning}\n                icon=\"clock\"\n                onPress={() => undefined}\n              />\n              <Button\n                label\n                neutral={item.active}\n                lowercase\n                title={item.name}\n                onPress={() => undefined}\n              />\n            </View>\n          )}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n        <Button title=\"update\" onPress={this.updateItem} />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  items: state.items\n});\n\nexport const Checklist = connect(\n  mapStateToProps,\n  {\n    updateItem,\n    createItem,\n    removeItem\n  }\n)(Component);\n","// import * as React from \"react\";\n\n// import {\n//   StyleSheet,\n//   View,\n//   Image,\n//   PanResponder,\n//   Animated,\n//   PanResponderInstance,\n//   Value,\n//   ValueXY\n// } from \"react-native\";\n\n// import { Screen } from \"../../components\";\n\n// interface Props {\n//   title: string;\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#F5FCFF\"\n//   },\n//   welcome: {\n//     fontSize: 20,\n//     textAlign: \"center\",\n//     margin: 10\n//   },\n//   instructions: {\n//     textAlign: \"center\",\n//     color: \"#333333\",\n//     marginBottom: 5\n//   }\n// });\n\n// interface State {\n//   pan: ValueXY;\n//   scale: Value;\n// }\n\n// export class Debug extends React.PureComponent<Props, State> {\n//   panResponder: PanResponderInstance;\n\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       pan: new Animated.ValueXY(),\n//       scale: new Animated.Value(1)\n//     };\n//     this.panResponder = PanResponder.create({\n//       onMoveShouldSetPanResponderCapture: () => true,\n//       onPanResponderGrant: () => {\n//         const { pan, scale } = this.state;\n//         // Set the initial value to the current state\n//         pan.setOffset({\n//           x: pan.x._value,\n//           y: pan.y._value\n//         });\n//         pan.setValue({ x: 0, y: 0 });\n//         Animated.spring(scale, {\n//           toValue: 2\n//         }).start();\n//       },\n//       onPanResponderMove: Animated.event([\n//         null,\n//         { dx: this.state.pan.x, dy: this.state.pan.y }\n//       ]),\n\n//       onPanResponderRelease: () => {\n//         // Flatten the offset to avoid erratic behavior\n//         const { pan, scale } = this.state;\n//         pan.flattenOffset();\n//         Animated.spring(scale, { toValue: 1 }).start();\n//       }\n//     });\n//   }\n\n//   componentDidMount() {}\n\n//   render() {\n//     // Destructure the value of pan from the state\n//     let { pan, scale } = this.state;\n\n//     // Calculate the x and y transform from the pan value\n//     let [translateX, translateY] = [pan.x, pan.y];\n\n//     let rotate = \"0deg\";\n\n//     // Calculate the transform property and set it as a value for our style which we add below to the Animated.View component\n//     let imageStyle = {\n//       transform: [{ translateX }, { translateY }, { rotate }, { scale }]\n//     };\n\n//     return (\n//       <View>\n//         <Animated.View style={[imageStyle]} {...this.panResponder.panHandlers}>\n//           <Image\n//             style={{ width: 50, height: 50 }}\n//             source={require(\"./placeholder.png\")}\n//             resizeMode=\"contain\"\n//           />\n//         </Animated.View>\n//       </View>\n//     );\n//   }\n// }\n\n// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// export class Debug extends React.PureComponent {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {}\n//   };\n\n//   constructor(props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (event, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (event, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     return this.props.data\n//       .map((item, i) => {\n//         if (i < this.state.index) {\n//           return null;\n//         }\n\n//         if (i === this.state.index) {\n//           return (\n//             <Animated.View\n//               key={item.id}\n//               style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//               {...this.state.panResponder.panHandlers}\n//             >\n//               {this.props.renderCard(item)}\n//             </Animated.View>\n//           );\n//         }\n\n//         return (\n//           <Animated.View\n//             key={item.id}\n//             style={[\n//               styles.cardStyle,\n//               { top: 10 * (i - this.state.index), zIndex: 5 }\n//             ]}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       })\n//       .reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\nimport * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Checklist,\n  Drag,\n  Fonts,\n  Input,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  public screens: any = {\n    Ball,\n    Drag,\n    Cards,\n    Fonts,\n    Buttons,\n    PinchSpread,\n    SearchBar,\n    OKRs,\n    Input,\n    Questionnaire,\n    Checklist\n  };\n\n  public generateRoutes = () => {\n    const { match } = this.props;\n    return Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${match.path}/${screen}`}\n        component={this.screens[screen]}\n      />\n    ));\n  };\n\n  public generateLinks = () => {\n    const { match } = this.props;\n    return Object.keys(this.screens).map((screen: string) => (\n      <Link key={screen} to={`${match.path}/${screen}`} title={screen} />\n    ));\n  };\n\n  public generateHome = () => {\n    const { history } = this.props;\n    return () => (\n      <Screen onLeftPress={() => history.goBack()}>\n        {this.generateLinks()}\n      </Screen>\n    );\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.generateHome()} />\n      </Switch>\n    );\n  }\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button, Screen } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Theme } from \"../../utils\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  }\n});\n\ninterface Props {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<Props> {\n  render() {\n    const { history } = this.props;\n    return (\n      <Screen\n        style={{ backgroundColor: Theme.color.primary, flexDirection: \"row\" }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n          <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n          <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title=\"To get started, edit ./src/containers/App/index.tsx\" />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          title=\"email\"\n          placeholder=\"example@gmail.com\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          title=\"password\"\n          placeholder=\"•••••••\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => undefined} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform } from \"react-native\";\nimport { Provider } from \"./models\";\nimport { App } from \"./screens\";\nimport { Config } from \"./utils\";\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}