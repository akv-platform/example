{"version":3,"sources":["models/App/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","models/Device/index.tsx","utils/Store/index.tsx","components/Text/index.tsx","components/Link/index.web.tsx","utils/Mock/index.tsx","models/User/index.tsx","components/Router/index.web.tsx","components/Router/Auth.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","screens/OKRs/index.tsx","components/TextInput/index.tsx","screens/Questionnaire/index.tsx","index.tsx"],"names":["AppActionTypes","Config","name","ios","android","web","root","Theme","padding","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","color","background","text","primary","secondary","success","brand","info","dark","light","warning","danger","DeviceActionTypes","Dimensions","get","FontWeight","middlewares","thunk","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","reducers","combineReducers","app","state","arguments","length","undefined","action","type","APP_LOAD","Object","objectSpread","payload","APP_UPDATE_STATUS","status","device","DEVICE_UPDATE_BATTERY","batteryLevel","DEVICE_UPDATE_FINGERPRINT","isPinOrFingerprintSet","DEVICE_UPDATE_NETWORK","networkType","networkEffectiveType","effectiveType","DEVICE_UPDATE_DIMENSION","windowDimensions","screenDimensions","screen","DEVICE_LOAD","store","createStore","Provider","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","children","props","react","es","React","styles","link","textDecoration","User","Router","BrowserRouter","StyleSheet","create","bold","fontWeight","Medium","center","textAlign","h1","fontSize","letterSpacing","Light","h2","h3","Regular","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","Text","_this$props","_this$props2","title","style","toUpperCase","font","getFont","exports_Text","container","flexDirection","paddingHorizontal","justifyContent","alignItems","borderRadius","borderWidth","borderColor","height","containedBody","backgroundColor","containedText","outlined","fab","alignSelf","disableBody","disableText","half","width","nonFlex","neutral","icon","paddingRight","Button","contained","onPress","disable","buttonStyle","textStyle","wrap","disableBodyStyle","disableTextStyle","wrapStyle","containedStyle","fabStyle","neutralStyle","halfStyle","centerStyle","shapeStyle","getShape","heightStyle","textStyleGroup","TouchableOpacity","disabled","Icon_Icon","size","Text_Text","containerStyle","margin","zIndex","elevation","position","shadowColor","shadowOffset","shadowRadius","shadowOpacity","Card","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","touchOpacity","activeOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","left","onLeftPress","right","onRightPress","leftIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","_this$props$leftIcon","_this$props$rightIcon","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","IconSource","badgeContainer","top","badgeText","Icon","defaultBadge","badgeLimit","maxBadgeNumber","defaultIconSize","defaultActiveColor","_this$props$badge","badge","clear","_this$props$size","_this$props$color","colored","num","String","IconSource_web_IconSource","OKRs","react_default","a","createElement","Screen_Screen","ScrollView","contentContainerStyle","Card_Card","PureComponent","Launcher","Store_Provider","OKRs_OKRs","AppRegistry","registerComponent","Platform","OS","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.3326b51b.chunk.js","sourcesContent":["import { AppStateStatus } from \"react-native\";\nimport { RootState } from \"../../utils\";\n\n// action types\nexport enum AppActionTypes {\n  APP_LOAD = \"APP_LOAD\",\n  APP_UPDATE_STATUS = \"APP_UPDATE_STATUS\"\n}\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status?: AppStateStatus;\n}\ninterface AppLoadAction {\n  type: AppActionTypes.APP_LOAD;\n  payload: AppLoadPayload;\n}\ninterface AppStateChangeAction {\n  type: AppActionTypes.APP_UPDATE_STATUS;\n  payload: AppStateStatus;\n}\ntype AppActions = AppLoadAction | AppStateChangeAction;\ntype AppLoadPayload = AppState;\n\n// actions\nexport const onAppLoad = (payload: AppLoadPayload) => ({\n  type: AppActionTypes.APP_LOAD,\n  payload\n});\nexport const onAppStateChange = (payload: AppStateStatus) => ({\n  type: AppActionTypes.APP_UPDATE_STATUS,\n  payload\n});\n\n// selectors\nexport const selectAppStatus = (state: RootState) => state.app.status;\n\n// reducers\nexport function AppReducer(state: AppState = {}, action: AppActions): AppState {\n  switch (action.type) {\n    case AppActionTypes.APP_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AppActionTypes.APP_UPDATE_STATUS:\n      return {\n        ...state,\n        status: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","export const Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    ios: \"ios\",\n    android: \"android\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  padding: {\n    p0: 0,\n    p1: 4,\n    p2: 8,\n    p3: 12,\n    p4: 16,\n    p5: 20,\n    p6: 24,\n    p7: 28,\n    p8: 32,\n    p9: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  },\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    warning: \"hsl(45, 100%, 51%)\",\n    danger: \"hsl(354, 70%, 54%)\"\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) { return color; }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { RootState } from \"../../utils\";\n\nconst WINDOW = Dimensions.get(\"window\");\n\n// action types\nexport enum DeviceActionTypes {\n  DEVICE_UPDATE_BATTERY = \"DEVICE_UPDATE_BATTERY\",\n  DEVICE_UPDATE_FINGERPRINT = \"DEVICE_UPDATE_FINGERPRINT\",\n  DEVICE_LOAD = \"DEVICE_LOAD\",\n  DEVICE_UPDATE_NETWORK = \"DEVICE_UPDATE_NETWORK\",\n  DEVICE_UPDATE_DIMENSION = \"DEVICE_UPDATE_DIMENSION\"\n}\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\ninterface DeviceUpdateBatteryAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY;\n  payload: number;\n}\ninterface DeviceUpdateFingerprintAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT;\n  payload: boolean;\n}\ninterface DeviceLoadAction {\n  type: DeviceActionTypes.DEVICE_LOAD;\n  payload: DeviceState;\n}\ninterface DeviceNetworkChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK;\n  payload: ConnectionInfo;\n}\ninterface DeviceDimensionChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION;\n  payload: DimensionsProps;\n}\ntype DeviceActions =\n  | DeviceUpdateBatteryAction\n  | DeviceUpdateFingerprintAction\n  | DeviceLoadAction\n  | DeviceNetworkChangeAction\n  | DeviceDimensionChangeAction;\n\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions?: ScaledSize;\n  screenDimensions?: ScaledSize;\n}\n\n// actions\nexport const onDeviceUpdateFingerprint = (payload: boolean) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT,\n  payload\n});\nexport const onDeviceUpdateBattery = (payload: number) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY,\n  payload\n});\nexport const onDeviceLoad = (payload: DeviceState) => ({\n  type: DeviceActionTypes.DEVICE_LOAD,\n  payload\n});\nexport const onNetworkChange = (payload: ConnectionType | ConnectionInfo) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK,\n  payload\n});\nexport const onDimensionChange = (payload: DimensionsProps) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION,\n  payload\n});\n\n// selectors\nexport const selectLandscapeOrientation = (state: RootState) =>\n  !state.device.windowDimensions\n    ? false\n    : state.device.windowDimensions.height <\n      state.device.windowDimensions.width;\n\nexport const selectSmallestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.width\n      : WINDOW.height\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n      ? state.device.windowDimensions.width\n      : state.device.windowDimensions.height;\n\nexport const selectLargestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.height\n      : WINDOW.height\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n      ? state.device.windowDimensions.height\n      : state.device.windowDimensions.width;\n\nexport const selectWidth = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.width\n    : state.device.windowDimensions.width;\n\nexport const selectHeight = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height\n    : state.device.windowDimensions.height;\n\n// reducers\nexport function DeviceReducer(state: DeviceState = {}, action: DeviceActions) {\n  switch (action.type) {\n    case DeviceActionTypes.DEVICE_UPDATE_BATTERY:\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT:\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_NETWORK:\n      return {\n        ...state,\n        networkType: action.payload.type,\n        networkEffectiveType: action.payload.effectiveType\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_DIMENSION:\n      return {\n        ...state,\n        windowDimensions: action.payload.window,\n        screenDimensions: action.payload.screen\n      };\n    case DeviceActionTypes.DEVICE_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\nimport { Provider as Original } from \"react-redux\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { AppReducer, AppState, DeviceReducer, DeviceState } from \"../../models\";\n\n// debug\ninterface DebugWindow extends Window {\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__<F extends any>(f: F): F;\n}\ndeclare var window: DebugWindow;\n\n// interfaces\nexport interface RootState {\n  app: AppState;\n  device: DeviceState;\n}\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(applyMiddleware(...middlewares));\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: AppReducer,\n  device: DeviceReducer\n});\n\n// store\nconst store = createStore(reducers, enhancers);\n\n// provider\nexport class Provider extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <Original store={store}>{children}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\n\nexport enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: FontWeight.Medium\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  h1: {\n    fontSize: 96,\n    letterSpacing: -1.5,\n    fontWeight: FontWeight.Light\n  },\n  h2: {\n    fontSize: 60,\n    letterSpacing: -0.5,\n    fontWeight: FontWeight.Light\n  },\n  h3: {\n    fontSize: 48,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h4: {\n    fontSize: 34,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  h5: {\n    fontSize: 24,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h6: {\n    fontSize: 20,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Medium\n  },\n  subtitle1: {\n    fontSize: 16,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Regular\n  },\n  subtitle2: {\n    fontSize: 14,\n    letterSpacing: 0.1,\n    fontWeight: FontWeight.Medium\n  },\n  body1: {\n    fontSize: 16,\n    letterSpacing: 0.5,\n    fontWeight: FontWeight.Regular\n  },\n  body2: {\n    fontSize: 14,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  button: {\n    fontSize: 14,\n    letterSpacing: 0.75,\n    fontWeight: FontWeight.Medium\n  },\n  caption: {\n    fontSize: 12,\n    letterSpacing: 0.4,\n    fontWeight: FontWeight.Regular\n  },\n  overline: {\n    fontSize: 10,\n    letterSpacing: 1.5,\n    fontWeight: FontWeight.Regular\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return styles.h1;\n    }\n    if (h2) {\n      return styles.h2;\n    }\n    if (h3) {\n      return styles.h3;\n    }\n    if (h4) {\n      return styles.h4;\n    }\n    if (h5) {\n      return styles.h5;\n    }\n    if (h6) {\n      return styles.h6;\n    }\n    if (subtitle1) {\n      return styles.subtitle1;\n    }\n    if (subtitle2) {\n      return styles.subtitle2;\n    }\n    if (body1) {\n      return styles.body1;\n    }\n    if (body2) {\n      return styles.body2;\n    }\n    if (button) {\n      return styles.button;\n    }\n    if (caption) {\n      return styles.caption;\n    }\n    if (overline) {\n      return styles.overline;\n    }\n    return styles.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const font = this.getFont();\n    if (title === undefined || title.length === 0) { return null; }\n    return (\n      <Original\n        style={[font, center && styles.center, bold && styles.bold, style]}\n      >\n        {text}\n      </Original>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Provider } from \"..\";\nimport { Router } from \"../../components\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  public mock = jest.fn();\n  public history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  public fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    paddingHorizontal: Theme.padding.p4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: Theme.padding.p1,\n    borderWidth: 1,\n    borderColor: \"transparent\"\n  },\n  height: {\n    height: Theme.padding.p9\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  fab: {\n    padding: Theme.padding.p4,\n    borderRadius: Theme.padding.p8,\n    alignSelf: \"flex-start\"\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  half: {\n    width: \"50%\"\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  center: {\n    alignSelf: \"center\"\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  icon: {\n    paddingRight: Theme.padding.p1\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  // state\n  active?: boolean;\n  disable?: boolean;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  // color\n  neutral?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      neutral,\n      half,\n      center,\n      icon\n    } = this.props;\n    const disableBodyStyle =\n      disable && (contained || outlined) ? styles.disableBody : undefined;\n    const disableTextStyle = disable ? styles.disableText : undefined;\n    const wrapStyle = wrap ? styles.nonFlex : undefined;\n    const containedStyle = contained ? styles.containedText : undefined;\n    const fabStyle = fab ? styles.fab : undefined;\n    const neutralStyle = neutral ? styles.neutral : undefined;\n    const halfStyle = half ? styles.half : undefined;\n    const centerStyle = center ? styles.center : undefined;\n    const shapeStyle = this.getShape();\n    const heightStyle = !fab ? styles.height : undefined;\n    const textStyleGroup = [\n      styles.text,\n      neutralStyle,\n      containedStyle,\n      disableTextStyle,\n      textStyle\n    ];\n    return (\n      <TouchableOpacity\n        style={[\n          styles.container,\n          heightStyle,\n          shapeStyle,\n          disableBodyStyle,\n          fabStyle,\n          wrapStyle,\n          halfStyle,\n          centerStyle,\n          buttonStyle\n        ]}\n        onPress={onPress}\n        disabled={disable}\n      >\n        {icon && (\n          <Icon\n            name={icon}\n            size={Theme.padding.p4}\n            style={[title && styles.icon, textStyleGroup]}\n          />\n        )}\n        {title && <Text center button title={title} style={textStyleGroup} />}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    padding: Theme.padding.p4,\n    margin: Theme.padding.p2,\n    backgroundColor: Theme.color.background,\n    zIndex: 1,\n    elevation: 1,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.6\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  public touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    borderBottomWidth: 0.5,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    borderColor: Theme.color.dark\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  public boldSyntax = \"*\";\n  public withoutSyntaxIndex = 2;\n\n  public isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  public formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p3\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: Theme.color.background,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p5,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon: string;\n  rightIcon: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onLeftPress: left,\n      onRightPress: right,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    const isEnabled = !!title || !!left || !!right;\n    return (\n      isEnabled && (\n        <View style={styles.container}>\n          {left && <NavButton icon={leftIcon} onPress={left} />}\n          {title && <Text style={styles.title} title={title} />}\n          {right && <NavButton icon={rightIcon} isRight onPress={right} />}\n        </View>\n      )\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Theme.color.background\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress && onLeftPress}\n          onRightPress={onRightPress && onRightPress}\n        />\n        <KeyboardAvoid scrollEnabled={!disableScroll} style={styles.container}>\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { StyleSheet, View, ViewStyle } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { IconSource } from \"./IconSource\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    height: 20,\n    width: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20\n  },\n  badgeText: {\n    fontSize: Theme.padding.p2,\n    color: Theme.color.background\n  }\n});\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  size?: number;\n  color?: string;\n  name: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public defaultBadge = 0;\n  public badgeLimit = \"!\";\n  public maxBadgeNumber = 99;\n  public defaultIconSize = Theme.padding.p6;\n  public defaultActiveColor = Theme.color.dark;\n\n  public render() {\n    const {\n      name,\n      style,\n      badge = this.defaultBadge,\n      clear,\n      size = this.defaultIconSize,\n      color = this.defaultActiveColor\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        {badge > 0 && (\n          <View style={styles.badgeContainer}>\n            <Text center style={styles.badgeText} title={num} />\n          </View>\n        )}\n      </View>\n    );\n  }\n}\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { Card, Screen, Text } from \"../../components\";\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent {\n  public state = {\n    value: 0\n  };\n  public render() {\n    return (\n      <Screen onLeftPress={() => undefined}>\n        <ScrollView contentContainerStyle={{ paddingHorizontal: 20 }}>\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { TextInput as Original, TextStyle } from \"react-native\";\n\ninterface Props {\n  style?: TextStyle | {};\n  placeholder?: string;\n  value?: string;\n  onChangeText?(text: string): void;\n}\n\nexport class TextInput extends React.PureComponent<Props> {\n  public render() {\n    const { placeholder, onChangeText, value, style } = this.props;\n    return (\n      <Original\n        style={style}\n        placeholder={placeholder}\n        onChangeText={onChangeText}\n        value={value}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { Button, Screen, Text } from \"../../components\";\n\ninterface Props {\n  title: string;\n}\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      key: \"1\",\n      title: \"What type of counseling are you looking for\",\n      next: \"2\",\n      type: \"radio\",\n      choices: [\n        {\n          key: \"1\",\n          title: \"individual\",\n          selected: false\n        },\n        {\n          key: \"2\",\n          title: \"couple\",\n          selected: false\n        },\n        {\n          key: \"3\",\n          title: \"teen\",\n          selected: false\n        }\n      ]\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) { return; }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    return (\n      <Screen>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform } from \"react-native\";\nimport { OKRs } from \"./screens\";\nimport { Config, Provider } from \"./utils\";\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider>\n        <OKRs />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}