{"version":3,"sources":["models/App/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","models/Device/index.tsx","utils/Store/index.tsx","utils/Font/index.tsx","utils/Mock/index.tsx","components/TextInput/index.tsx","components/Link/index.web.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","components/Text/index.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/Clear.tsx","components/TextInput/Error.tsx","components/TextInput/Title.tsx","screens/Debug/screens/Checklist/data.tsx","screens/App/index.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklist/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["AppActionTypes","Config","app","name","os","ios","android","web","root","Theme","padding","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","color","background","text","primary","secondary","success","brand","info","dark","light","warning","danger","colorWithOpacity","opacity","arguments","length","undefined","boundedOpacity","startsWith","substr","substring","concat","DeviceActionTypes","WINDOW","Dimensions","get","selectWidth","state","device","windowDimensions","width","selectHeight","height","FontWeight","middlewares","thunk","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","reducers","combineReducers","action","type","APP_LOAD","Object","objectSpread","payload","APP_UPDATE_STATUS","status","DEVICE_UPDATE_BATTERY","batteryLevel","DEVICE_UPDATE_FINGERPRINT","isPinOrFingerprintSet","DEVICE_UPDATE_NETWORK","networkType","networkEffectiveType","effectiveType","DEVICE_UPDATE_DIMENSION","screenDimensions","screen","DEVICE_LOAD","store","createStore","Provider","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","children","props","react","es","React","KeyboardType","ReturnKeyType","FontSize","h1","fontSize","letterSpacing","fontWeight","Light","h2","h3","Regular","h4","h5","h6","Medium","subtitle1","subtitle2","body1","body2","button","caption","overline","styles","link","textDecoration","Link","_this$props","to","title","buttonStyle","textStyle","TouchableOpacity","style","es_Link","Text_Text","center","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","BrowserRouter","StyleSheet","create","bold","textAlign","Text","_this$props2","hidden","toUpperCase","getFont","exports_Text","container","flexDirection","paddingHorizontal","justifyContent","alignItems","borderRadius","borderWidth","borderColor","label","marginBottom","containedBody","backgroundColor","containedText","outlined","fab","alignSelf","disableBody","disableText","half","nonFlex","neutral","icon","paddingRight","Button","contained","onPress","disable","wrap","iconColor","lowercase","activeOpacity","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","margin","zIndex","elevation","position","shadowColor","shadowOffset","shadowRadius","shadowOpacity","Card","touchOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","left","onLeftPress","right","onRightPress","leftIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","_this$props$leftIcon","_this$props$rightIcon","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","Clear","Button_Button","Error","error","message","textTransform","optional","Title","optionalText","stylesOptional","row","textInput","marginTop","borderFocus","borderError","ItemStatus","TextInput","focus","updateFocus","setState","focusOnInput","textClear","onChangeText","_this$props$editable","editable","autoCorrect","secureTextEntry","keyboardType","returnKeyType","_this$props$blurOnSub","blurOnSubmit","placeholder","_this$props$disableFu","disableFullscreenUI","textInputStyle","noValue","Title_Title","exports_TextInput","ref","input","selectionColor","onFocus","onBlur","placeholderTextColor","underlineColorAndroid","Clear_Clear","Error_Error","AppComponent","onNetworkChange","change","onDimensionChange","onAppStateChange","enableListeners","disableListeners","addEventListener","NetInfo","AppState","removeEventListener","index_web_Router","react_router_dom_es","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","App","connect","onAppLoad","onDeviceLoad","onDeviceUpdateBattery","onDeviceUpdateFingerprint","ball","marginLeft","ballPosition","Animated","ValueXY","x","y","dx","dy","spring","toValue","start","history","Screen_Screen","goBack","getLayout","animate","Math","random","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","spread","pinch","determineCenter","isPinch","isSpread","spreadCount","pinchCount","gestureHandler","onPanResponderRelease","_this$state","_this$state2","PinchSpread","header","textContainer","item","borderBottomColor","DATA","id","SearchBar","iconBack","iconSearch","textInputPlaceHolder","iconName","animation","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","Card_Card","Questionnaire","next","choices","selected","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","defineProperty","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","items","Data","trigger","1","2","3","4","Checklist","screens","generateRoutes","match","generateLinks","index_web_Link","generateHome","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","email","password","fakeAuth","Launcher","Store_Provider","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.e6de850b.chunk.js","sourcesContent":["import { AppStateStatus } from \"react-native\";\nimport { RootState } from \"../../utils\";\n\n// action types\nexport enum AppActionTypes {\n  APP_LOAD = \"APP_LOAD\",\n  APP_UPDATE_STATUS = \"APP_UPDATE_STATUS\"\n}\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status?: AppStateStatus;\n}\ninterface AppLoadAction {\n  type: AppActionTypes.APP_LOAD;\n  payload: AppLoadPayload;\n}\ninterface AppStateChangeAction {\n  type: AppActionTypes.APP_UPDATE_STATUS;\n  payload: AppStateStatus;\n}\ntype AppActions = AppLoadAction | AppStateChangeAction;\ntype AppLoadPayload = AppState;\n\n// actions\nexport const onAppLoad = (payload: AppLoadPayload) => ({\n  type: AppActionTypes.APP_LOAD,\n  payload\n});\nexport const onAppStateChange = (payload: AppStateStatus) => ({\n  type: AppActionTypes.APP_UPDATE_STATUS,\n  payload\n});\n\n// selectors\nexport const selectAppStatus = (state: RootState) => state.app.status;\n\n// reducers\nexport function AppReducer(state: AppState = {}, action: AppActions): AppState {\n  switch (action.type) {\n    case AppActionTypes.APP_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AppActionTypes.APP_UPDATE_STATUS:\n      return {\n        ...state,\n        status: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","export const Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    ios: \"ios\",\n    android: \"android\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  padding: {\n    p0: 0,\n    p1: 4,\n    p2: 8,\n    p3: 12,\n    p4: 16,\n    p5: 20,\n    p6: 24,\n    p7: 28,\n    p8: 32,\n    p9: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  },\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    warning: \"hsl(45, 100%, 51%)\",\n    danger: \"hsl(354, 70%, 54%)\"\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) { return color; }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { RootState } from \"../../utils\";\n\nconst WINDOW = Dimensions.get(\"window\");\n\n// action types\nexport enum DeviceActionTypes {\n  DEVICE_UPDATE_BATTERY = \"DEVICE_UPDATE_BATTERY\",\n  DEVICE_UPDATE_FINGERPRINT = \"DEVICE_UPDATE_FINGERPRINT\",\n  DEVICE_LOAD = \"DEVICE_LOAD\",\n  DEVICE_UPDATE_NETWORK = \"DEVICE_UPDATE_NETWORK\",\n  DEVICE_UPDATE_DIMENSION = \"DEVICE_UPDATE_DIMENSION\"\n}\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\ninterface DeviceUpdateBatteryAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY;\n  payload: number;\n}\ninterface DeviceUpdateFingerprintAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT;\n  payload: boolean;\n}\ninterface DeviceLoadAction {\n  type: DeviceActionTypes.DEVICE_LOAD;\n  payload: DeviceState;\n}\ninterface DeviceNetworkChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK;\n  payload: ConnectionInfo;\n}\ninterface DeviceDimensionChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION;\n  payload: DimensionsProps;\n}\ntype DeviceActions =\n  | DeviceUpdateBatteryAction\n  | DeviceUpdateFingerprintAction\n  | DeviceLoadAction\n  | DeviceNetworkChangeAction\n  | DeviceDimensionChangeAction;\n\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions?: ScaledSize;\n  screenDimensions?: ScaledSize;\n}\n\n// actions\nexport const onDeviceUpdateFingerprint = (payload: boolean) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT,\n  payload\n});\nexport const onDeviceUpdateBattery = (payload: number) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY,\n  payload\n});\nexport const onDeviceLoad = (payload: DeviceState) => ({\n  type: DeviceActionTypes.DEVICE_LOAD,\n  payload\n});\nexport const onNetworkChange = (payload: ConnectionType | ConnectionInfo) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK,\n  payload\n});\nexport const onDimensionChange = (payload: DimensionsProps) => ({\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION,\n  payload\n});\n\n// selectors\nexport const selectLandscapeOrientation = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height < WINDOW.width\n    : state.device.windowDimensions.height <\n      state.device.windowDimensions.width;\n\nexport const selectSmallestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.width\n      : WINDOW.height\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\n\nexport const selectLargestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.height\n      : WINDOW.width\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\n\nexport const selectWidth = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.width\n    : state.device.windowDimensions.width;\n\nexport const selectHeight = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height\n    : state.device.windowDimensions.height;\n\n// reducers\nexport function DeviceReducer(state: DeviceState = {}, action: DeviceActions) {\n  switch (action.type) {\n    case DeviceActionTypes.DEVICE_UPDATE_BATTERY:\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT:\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_NETWORK:\n      return {\n        ...state,\n        networkType: action.payload.type,\n        networkEffectiveType: action.payload.effectiveType\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_DIMENSION:\n      return {\n        ...state,\n        windowDimensions: action.payload.window,\n        screenDimensions: action.payload.screen\n      };\n    case DeviceActionTypes.DEVICE_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\nimport { Provider as Original } from \"react-redux\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { AppReducer, AppState, DeviceReducer, DeviceState } from \"../../models\";\n\n// debug\ninterface DebugWindow extends Window {\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__<F extends any>(f: F): F;\n}\ndeclare var window: DebugWindow;\n\n// interfaces\nexport interface RootState {\n  app: AppState;\n  device: DeviceState;\n}\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(applyMiddleware(...middlewares));\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: AppReducer,\n  device: DeviceReducer\n});\n\n// store\nconst store = createStore(reducers, enhancers);\n\n// provider\nexport class Provider extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <Original store={store}>{children}</Original>;\n  }\n}\n","export enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nexport const FontSize = {\n  h1: {\n    fontSize: 96,\n    letterSpacing: -1.5,\n    fontWeight: FontWeight.Light\n  },\n  h2: {\n    fontSize: 60,\n    letterSpacing: -0.5,\n    fontWeight: FontWeight.Light\n  },\n  h3: {\n    fontSize: 48,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h4: {\n    fontSize: 34,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  h5: {\n    fontSize: 24,\n    letterSpacing: 0,\n    fontWeight: FontWeight.Regular\n  },\n  h6: {\n    fontSize: 20,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Medium\n  },\n  subtitle1: {\n    fontSize: 16,\n    letterSpacing: 0.15,\n    fontWeight: FontWeight.Regular\n  },\n  subtitle2: {\n    fontSize: 14,\n    letterSpacing: 0.1,\n    fontWeight: FontWeight.Medium\n  },\n  body1: {\n    fontSize: 16,\n    letterSpacing: 0.5,\n    fontWeight: FontWeight.Regular\n  },\n  body2: {\n    fontSize: 14,\n    letterSpacing: 0.25,\n    fontWeight: FontWeight.Regular\n  },\n  button: {\n    fontSize: 14,\n    letterSpacing: 0.75,\n    fontWeight: FontWeight.Medium\n  },\n  caption: {\n    fontSize: 12,\n    letterSpacing: 0.4,\n    fontWeight: FontWeight.Regular\n  },\n  overline: {\n    fontSize: 10,\n    letterSpacing: 1.5,\n    fontWeight: FontWeight.Regular\n  }\n};\n","import * as React from \"react\";\nimport { Provider } from \"..\";\nimport { Router } from \"../../components\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  public mock = jest.fn();\n  public history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextInput as Original,\n  TextStyle,\n  View\n} from \"react-native\";\nimport { FontSize, Theme } from \"../../utils\";\nimport { Clear } from \"./Clear\";\nimport { Error } from \"./Error\";\nimport { Title } from \"./Title\";\n\n// styling https://uxdesign.cc/design-better-forms-96fadca0f49c\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\"\n  },\n  textInput: {\n    flex: 1,\n    borderColor: Theme.color.secondary,\n    borderWidth: 2,\n    borderRadius: Theme.padding.p1,\n    padding: Theme.padding.p2,\n    paddingRight: Theme.padding.p8,\n    marginTop: Theme.padding.p1,\n    backgroundColor: Theme.color.background\n  },\n  borderFocus: {\n    borderColor: Theme.color.primary\n  },\n  borderError: {\n    borderColor: Theme.color.danger\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  error?: string;\n  style?: TextStyle | {};\n  placeholder?: string;\n  value: string;\n  disableFullscreenUI?: boolean;\n  editable?: boolean;\n  autoCorrect?: boolean;\n  blurOnSubmit?: boolean;\n  secureTextEntry?: boolean;\n  keyboardType?: KeyboardType;\n  returnKeyType?: ReturnKeyType;\n  onChangeText(text: string): void;\n}\n\ninterface State {\n  focus: boolean;\n}\n\nexport enum KeyboardType {\n  Default = \"default\",\n  Number = \"number-pad\",\n  Decimal = \"decimal-pad\",\n  Numeric = \"numeric\",\n  Email = \"email-address\",\n  Phone = \"phone-pad\"\n}\n\nexport enum ReturnKeyType {\n  Done = \"done\",\n  Go = \"go\",\n  Next = \"next\",\n  Search = \"search\",\n  Send = \"send\"\n}\n\nexport class TextInput extends React.PureComponent<Props, State> {\n  public textInput?: Original;\n  public state = {\n    focus: false\n  };\n\n  public updateFocus = (focus: boolean) => {\n    this.setState({ focus });\n  };\n\n  public focusOnInput = () => {\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.focus();\n  };\n\n  public textClear = () => {\n    const { onChangeText } = this.props;\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.clear();\n    onChangeText(\"\");\n  };\n\n  public render() {\n    const {\n      title,\n      optional,\n      error,\n      editable = true,\n      autoCorrect,\n      secureTextEntry,\n      keyboardType,\n      returnKeyType,\n      blurOnSubmit = true,\n      placeholder,\n      onChangeText,\n      value,\n      disableFullscreenUI = true,\n      style\n    } = this.props;\n    const { focus } = this.state;\n    const textInputStyle = [\n      styles.textInput,\n      error && styles.borderError,\n      focus && styles.borderFocus,\n      FontSize.body2,\n      style\n    ];\n    const noValue = value.length === 0;\n    return (\n      <>\n        <Title title={title} optional={optional} onPress={this.focusOnInput} />\n        <View style={styles.row}>\n          <Original\n            ref={input => {\n              if (!input) {\n                return;\n              }\n              this.textInput = input;\n            }}\n            autoCorrect={autoCorrect}\n            selectionColor={Theme.color.primary}\n            disableFullscreenUI={disableFullscreenUI}\n            onFocus={() => this.updateFocus(true)}\n            onBlur={() => this.updateFocus(false)}\n            editable={editable}\n            placeholderTextColor={Theme.color.secondary}\n            blurOnSubmit={blurOnSubmit}\n            secureTextEntry={secureTextEntry}\n            returnKeyType={returnKeyType}\n            keyboardType={keyboardType}\n            underlineColorAndroid=\"transparent\"\n            style={textInputStyle}\n            placeholder={placeholder}\n            onChangeText={onChangeText}\n            value={value}\n          />\n          <Clear hidden={noValue} onPress={this.textClear} />\n        </View>\n        <Error error={error} onPress={this.focusOnInput} />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  public fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\nimport { FontSize } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: \"600\" // TODO: figure out why I cannot import FontWeight.Medium with tests\n  },\n  center: {\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n  hidden?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return FontSize.h1;\n    }\n    if (h2) {\n      return FontSize.h2;\n    }\n    if (h3) {\n      return FontSize.h3;\n    }\n    if (h4) {\n      return FontSize.h4;\n    }\n    if (h5) {\n      return FontSize.h5;\n    }\n    if (h6) {\n      return FontSize.h6;\n    }\n    if (subtitle1) {\n      return FontSize.subtitle1;\n    }\n    if (subtitle2) {\n      return FontSize.subtitle2;\n    }\n    if (body1) {\n      return FontSize.body1;\n    }\n    if (body2) {\n      return FontSize.body2;\n    }\n    if (button) {\n      return FontSize.button;\n    }\n    if (caption) {\n      return FontSize.caption;\n    }\n    if (overline) {\n      return FontSize.overline;\n    }\n    return FontSize.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center, hidden } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0 || hidden) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    paddingHorizontal: Theme.padding.p4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: Theme.padding.p1,\n    borderWidth: 1,\n    borderColor: \"transparent\"\n  },\n  height: {\n    height: Theme.padding.p9\n  },\n  label: {\n    height: Theme.padding.p5,\n    paddingHorizontal: 0,\n    marginBottom: Theme.padding.p2,\n    justifyContent: \"flex-start\"\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  fab: {\n    padding: Theme.padding.p4,\n    borderRadius: Theme.padding.p8,\n    alignSelf: \"flex-start\"\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  half: {\n    width: \"50%\"\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  center: {\n    alignSelf: \"center\"\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  secondary: {\n    color: Theme.color.secondary\n  },\n  danger: {\n    color: Theme.color.danger\n  },\n  icon: {\n    paddingRight: 2\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  hidden?: boolean;\n  disable?: boolean;\n  activeOpacity?: number;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  label?: boolean;\n  // color\n  neutral?: boolean;\n  secondary?: boolean;\n  danger?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  lowercase?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      hidden,\n      neutral,\n      half,\n      center,\n      icon,\n      iconColor,\n      secondary,\n      danger,\n      label,\n      lowercase,\n      activeOpacity\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      label && styles.label,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      secondary && styles.secondary,\n      danger && styles.danger,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    if (hidden) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={activeOpacity}\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p4}\n          style={iconStyleGroup}\n        />\n        <Text center button={!lowercase} title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    padding: Theme.padding.p4,\n    margin: Theme.padding.p2,\n    backgroundColor: Theme.color.background,\n    zIndex: 1,\n    elevation: 1,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.6\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  public touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    borderBottomWidth: 0.5,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    borderColor: Theme.color.dark\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  public boldSyntax = \"*\";\n  public withoutSyntaxIndex = 2;\n\n  public isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  public formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p3\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: Theme.color.background,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p5,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon: string;\n  rightIcon: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onLeftPress: left,\n      onRightPress: right,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    const isEnabled = !!title || !!left || !!right;\n    return (\n      isEnabled && (\n        <View style={styles.container}>\n          {left && <NavButton icon={leftIcon} onPress={left} />}\n          {title && <Text style={styles.title} title={title} />}\n          {right && <NavButton icon={rightIcon} isRight onPress={right} />}\n        </View>\n      )\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Theme.color.background\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress && onLeftPress}\n          onRightPress={onRightPress && onRightPress}\n        />\n        <KeyboardAvoid scrollEnabled={!disableScroll} style={styles.container}>\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    height: 20,\n    width: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20\n  },\n  badgeText: {\n    fontSize: Theme.padding.p2,\n    color: Theme.color.background\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  public badgeLimit = \"!\";\n  public maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) { return null; }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  hidden?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p6,\n      color = Theme.color.dark,\n      hidden\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0 || hidden) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Button } from \"..\";\n\nconst styles = StyleSheet.create({\n  clear: {\n    position: \"absolute\",\n    right: -6,\n    top: 6\n  }\n});\n\ninterface Props {\n  hidden: boolean;\n  onPress(): void;\n}\n\nexport class Clear extends React.PureComponent<Props> {\n  public icon = \"close-circle\";\n  public render() {\n    const { hidden, onPress } = this.props;\n    return (\n      <Button\n        secondary\n        hidden={hidden}\n        icon={this.icon}\n        buttonStyle={styles.clear}\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Button } from \"..\";\n\ninterface Props {\n  error?: string;\n  onPress(): void;\n}\n\nexport class Error extends React.PureComponent<Props> {\n  public icon = \"alert-circle\";\n  public render() {\n    const { error, onPress } = this.props;\n    const icon = error && this.icon;\n    const message = error || \" \";\n    return (\n      <Button\n        label\n        wrap\n        lowercase\n        activeOpacity={1}\n        icon={icon}\n        title={message}\n        danger\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  title: {\n    textTransform: \"capitalize\"\n  },\n  optional: {\n    color: Theme.color.secondary\n  },\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  onPress(): void;\n}\n\nexport class Title extends React.PureComponent<Props> {\n  public optionalText = \" - Optional\";\n  public render() {\n    const { title, optional, onPress } = this.props;\n    const stylesOptional = [styles.title, styles.optional];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return (\n      // TODO: remove touchableopacity and move to button component\n      <TouchableOpacity\n        activeOpacity={1}\n        style={styles.container}\n        onPress={onPress}\n      >\n        <Text title={title} style={styles.title} />\n        <Text\n          hidden={!optional}\n          title={this.optionalText}\n          style={stylesOptional}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","interface Source {\n  id: string;\n  title: string;\n  url: string;\n}\n\ninterface Reminder {\n  id: string;\n  day: string; // ?\n  time: string; // ?\n}\n\ninterface Item {\n  id: string;\n  active: boolean;\n  title: string;\n  status: ItemStatus;\n  history?: ItemHistories;\n  reminder?: Reminders;\n  source: Sources;\n}\n\nenum ItemStatus {\n  Todo = \"Todo\",\n  InProgress = \"InProgress\",\n  Reminded = \"Reminded\",\n  Done = \"Done\"\n}\n\ninterface ItemHistory {\n  id: string;\n  createdAt: number;\n  updatedAt: number;\n  itemId: number;\n  status: ItemStatus;\n}\n\ninterface Checklist {\n  id: string;\n  item: Items;\n  itemOrder: string[];\n}\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  checklistOrder: string[];\n  checklist: Checklists;\n}\n\ninterface Reminders {\n  [id: string]: Reminder;\n}\n\ninterface Sources {\n  [id: string]: Source;\n}\n\ninterface ItemHistories {\n  [id: string]: ItemHistory;\n}\n\ninterface Items {\n  [id: string]: Item;\n}\n\ninterface Checklists {\n  [id: string]: Checklist;\n}\n\nexport const User: User | any = {};\n\nexport const Data = {\n  \"4\": {\n    trigger: \"backlog\",\n    items: {\n      \"1\": {\n        title: \"find car outlet\"\n      },\n      \"2\": {\n        title: \"find and charge battery pack\"\n      }\n    }\n  },\n  \"3\": {\n    trigger: \"enter train\",\n    reminders: {},\n    items: {\n      \"1\": {\n        title: \"read\",\n        sources: {}\n      },\n      \"2\": {\n        title: \"remove teeth\"\n      }\n    }\n  },\n  \"5\": {\n    trigger: \"arrive at work\",\n    items: {\n      \"1\": {\n        id: \"1\",\n        title: \"clean emails\"\n      },\n      \"2\": {\n        id: \"2\",\n        title: \"clean slack\"\n      },\n      \"3\": {\n        id: \"3\",\n        title: \"look at sentry\"\n      },\n      \"4\": {\n        id: \"4\",\n        title: \"respond to pull requests\"\n      }\n    }\n  }\n};\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport { onAppLoad, onAppStateChange } from \"../../models/App\";\nimport {\n  DimensionsProps,\n  onDeviceLoad,\n  onDeviceUpdateBattery,\n  onDeviceUpdateFingerprint,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models/Device\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppLoad: typeof onAppLoad;\n  onAppStateChange: typeof onAppStateChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n  onDeviceUpdateFingerprint: typeof onDeviceUpdateFingerprint;\n  onDeviceUpdateBattery: typeof onDeviceUpdateBattery;\n  onDeviceLoad: typeof onDeviceLoad;\n}\n\ntype Props = DispatchProps;\n\nclass AppComponent extends React.Component<Props> {\n  public componentDidMount() {\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public enableListeners() {\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  public disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n  }\n\n  public onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    this.props.onNetworkChange(change);\n  };\n\n  public onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  public onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStateChange(change);\n  };\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppLoad,\n    onAppStateChange,\n    onDimensionChange,\n    onNetworkChange,\n    onDeviceLoad,\n    onDeviceUpdateBattery,\n    onDeviceUpdateFingerprint\n  }\n)(AppComponent);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    borderWidth: 30,\n    marginLeft: -30,\n    marginTop: -30,\n    borderColor: \"black\"\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    name: \"Shot\",\n    color: \"#a9d0b6\",\n    price: \"30 CHF\"\n  },\n  {\n    name: \"Juice\",\n    color: \"#e9bbd1\",\n    price: \"64 CHF\"\n  },\n  {\n    name: \"Mighty Juice\",\n    color: \"#eba65c\",\n    price: \"80 CHF\"\n  },\n  {\n    name: \"Sandwich\",\n    color: \"#95c3e4\",\n    price: \"85 CHF\"\n  },\n  {\n    name: \"Combi\",\n    color: \"#1c1c1c\",\n    price: \"145 CHF\"\n  },\n  {\n    name: \"Signature\",\n    color: \"#a390bc\",\n    price: \"92 CHF\"\n  },\n  {\n    name: \"Coffee\",\n    color: \"#fef2a0\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                inputRange,\n                outputRange,\n                extrapolateRight: \"clamp\"\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    margin: 16\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  card: {\n    height: cardHeight,\n    borderRadius: 10\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    borderWidth: 30,\n    marginLeft: -30,\n    marginTop: -30,\n    borderColor: \"black\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public ballPosition: Animated.ValueXY;\n  public panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      spread: false,\n      pinch: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../utils\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    spreadCount: 0,\n    pinchCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  width: selectWidth(state),\n  height: selectHeight(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    height: Theme.padding.p20,\n    backgroundColor: Theme.color.light,\n    padding: Theme.padding.p2,\n    justifyContent: \"center\"\n  },\n  textContainer: {\n    height: \"100%\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: Theme.padding.p2\n  },\n  text: {\n    fontSize: Theme.padding.p6\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p2\n  },\n  item: {\n    padding: Theme.padding.p6,\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconBack = \"arrow-left\";\n  public iconSearch = \"magnify\";\n  public textInputPlaceHolder = \"Search\";\n  public state: State = {\n    input: \"\",\n    iconName: this.iconSearch,\n    animation: new Animated.Value(0)\n  };\n  public animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      toValue: value,\n      duration: this.animationDuration\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p5 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      key: \"1\",\n      title: \"What type of counseling are you looking for\",\n      next: \"2\",\n      type: \"radio\",\n      choices: [\n        {\n          key: \"1\",\n          title: \"individual\",\n          selected: false\n        },\n        {\n          key: \"2\",\n          title: \"couple\",\n          selected: false\n        },\n        {\n          key: \"3\",\n          title: \"teen\",\n          selected: false\n        }\n      ]\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\nimport { Data } from \"./data\";\n\ntype Props = RouteComponentProps;\n\nexport class Checklist extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    const items: any = Data[5].items;\n    const data = Object.keys(items).map(key => items[key]);\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text title={Data[5].trigger} />\n        <FlatList\n          keyExtractor={item => item.id}\n          data={data}\n          renderItem={({ item }) => {\n            return (\n              <View style={{ flexDirection: \"row\" }}>\n                <Button\n                  icon=\"checkbox-marked-circle\"\n                  iconColor={Theme.color.success}\n                  onPress={() => undefined}\n                />\n                <Button\n                  icon=\"close-circle\"\n                  iconColor={Theme.color.danger}\n                  onPress={() => undefined}\n                />\n                <Button\n                  iconColor={Theme.color.warning}\n                  icon=\"clock\"\n                  onPress={() => undefined}\n                />\n                <Button neutral title={item.title} onPress={() => undefined} />\n              </View>\n            );\n          }}\n        />\n        <Button title=\"done\" onPress={() => undefined} />\n      </Screen>\n    );\n  }\n}\n","// import * as React from \"react\";\n\n// import {\n//   StyleSheet,\n//   View,\n//   Image,\n//   PanResponder,\n//   Animated,\n//   PanResponderInstance,\n//   Value,\n//   ValueXY\n// } from \"react-native\";\n\n// import { Screen } from \"../../components\";\n\n// interface Props {\n//   title: string;\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#F5FCFF\"\n//   },\n//   welcome: {\n//     fontSize: 20,\n//     textAlign: \"center\",\n//     margin: 10\n//   },\n//   instructions: {\n//     textAlign: \"center\",\n//     color: \"#333333\",\n//     marginBottom: 5\n//   }\n// });\n\n// interface State {\n//   pan: ValueXY;\n//   scale: Value;\n// }\n\n// export class Debug extends React.PureComponent<Props, State> {\n//   panResponder: PanResponderInstance;\n\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       pan: new Animated.ValueXY(),\n//       scale: new Animated.Value(1)\n//     };\n//     this.panResponder = PanResponder.create({\n//       onMoveShouldSetPanResponderCapture: () => true,\n//       onPanResponderGrant: () => {\n//         const { pan, scale } = this.state;\n//         // Set the initial value to the current state\n//         pan.setOffset({\n//           x: pan.x._value,\n//           y: pan.y._value\n//         });\n//         pan.setValue({ x: 0, y: 0 });\n//         Animated.spring(scale, {\n//           toValue: 2\n//         }).start();\n//       },\n//       onPanResponderMove: Animated.event([\n//         null,\n//         { dx: this.state.pan.x, dy: this.state.pan.y }\n//       ]),\n\n//       onPanResponderRelease: () => {\n//         // Flatten the offset to avoid erratic behavior\n//         const { pan, scale } = this.state;\n//         pan.flattenOffset();\n//         Animated.spring(scale, { toValue: 1 }).start();\n//       }\n//     });\n//   }\n\n//   componentDidMount() {}\n\n//   render() {\n//     // Destructure the value of pan from the state\n//     let { pan, scale } = this.state;\n\n//     // Calculate the x and y transform from the pan value\n//     let [translateX, translateY] = [pan.x, pan.y];\n\n//     let rotate = \"0deg\";\n\n//     // Calculate the transform property and set it as a value for our style which we add below to the Animated.View component\n//     let imageStyle = {\n//       transform: [{ translateX }, { translateY }, { rotate }, { scale }]\n//     };\n\n//     return (\n//       <View>\n//         <Animated.View style={[imageStyle]} {...this.panResponder.panHandlers}>\n//           <Image\n//             style={{ width: 50, height: 50 }}\n//             source={require(\"./placeholder.png\")}\n//             resizeMode=\"contain\"\n//           />\n//         </Animated.View>\n//       </View>\n//     );\n//   }\n// }\n\n// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// export class Debug extends React.PureComponent {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {}\n//   };\n\n//   constructor(props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (event, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (event, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     return this.props.data\n//       .map((item, i) => {\n//         if (i < this.state.index) {\n//           return null;\n//         }\n\n//         if (i === this.state.index) {\n//           return (\n//             <Animated.View\n//               key={item.id}\n//               style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//               {...this.state.panResponder.panHandlers}\n//             >\n//               {this.props.renderCard(item)}\n//             </Animated.View>\n//           );\n//         }\n\n//         return (\n//           <Animated.View\n//             key={item.id}\n//             style={[\n//               styles.cardStyle,\n//               { top: 10 * (i - this.state.index), zIndex: 5 }\n//             ]}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       })\n//       .reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\nimport * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Checklist,\n  Drag,\n  Fonts,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  public screens: any = {\n    Ball,\n    Drag,\n    Cards,\n    Fonts,\n    Buttons,\n    PinchSpread,\n    SearchBar,\n    OKRs,\n    Questionnaire,\n    Checklist\n  };\n\n  public generateRoutes = () => {\n    const { match } = this.props;\n    return Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${match.path}/${screen}`}\n        component={this.screens[screen]}\n      />\n    ));\n  };\n\n  public generateLinks = () => {\n    const { match } = this.props;\n    return Object.keys(this.screens).map((screen: string) => (\n      <Link key={screen} to={`${match.path}/${screen}`} title={screen} />\n    ));\n  };\n\n  public generateHome = () => {\n    const { history } = this.props;\n    return () => (\n      <Screen onLeftPress={() => history.goBack()}>\n        {this.generateLinks()}\n      </Screen>\n    );\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.generateHome()} />\n      </Switch>\n    );\n  }\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button, Screen } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Theme } from \"../../utils\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  }\n});\n\ninterface Props {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<Props> {\n  render() {\n    const { history } = this.props;\n    return (\n      <Screen\n        style={{ backgroundColor: Theme.color.primary, flexDirection: \"row\" }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n          <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n          <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title=\"To get started, edit ./src/containers/App/index.tsx\" />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          title=\"email\"\n          placeholder=\"example@gmail.com\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          title=\"password\"\n          placeholder=\"•••••••\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => undefined} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform } from \"react-native\";\nimport { App } from \"./screens\";\nimport { Config, Provider } from \"./utils\";\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}